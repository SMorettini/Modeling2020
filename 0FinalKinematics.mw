<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2019" minor="2"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="false" autoexpanding_sections="true" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false" editable="true">
</View-Properties>
<MapleNet-Properties prettyprint="3" warnlevel="3" compactdisplay="false" preplot="" helpbrowser="standard" displayprecision="-1" echo="1" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" imaginaryunit="I" longdelim="true" elisiontermsthreshold="10000" elisiondigitsafter="100" elisiondigitsbefore="100" plotdevice="inline" errorbreak="1" plotoptions="" plotdriver="opengl" quiet="false" elisiontermsbefore="100" elisiontermsafter="100" historytimestamp="false" screenwidth="79" indentamount="4" plotoutput="terminal" screenpixelheight="1080" rtablesize="20" useclientjvm="true" labelwidth="20" postplot="" typesetting="extended" ansi="false" ansicolor="[]" elisiondigitsthreshold="10000" showassumed="1" ansilprint="false" trailingsemicolon="true" errorcursor="false" labelling="true" screenheight="25" prompt="&gt; " verboseproc="1" latexwidth="8.0" ShowLabels="true"/>
<Styles>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode=""/>
<Task-table>
    <Task-category name="&lt;default&gt;"/>
</Task-table>
<Task>
<TaskVariable name="5" description=""/>
<TaskVariable name="dot2" description=""/>
<TaskVariable name="dot" description=""/>
<TaskVariable name="x" description=""/>
<TaskVariable name="y" description=""/>
<TaskVariable name="z" description=""/>
</Task><Table visible="true" editable="true" exterior="bottom" pagebreak="cell" showlabel="false" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="none" postexecute="advance" drawcaption="false" drawtitle="false" width="100.0%" captionalignment="0" showinput="false" captionposition="1" id="Table0" alignment="left" randomized="false" labelreference="L40608" showgroup="false" order="row"><Table-Column weight="4" separator="true"></Table-Column><Table-Column weight="196" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L40614" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group><Text-field style="Text" layout="Normal"></Text-field>
<Group labelreference="L40613" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L40607" drawlabel="true">
<Input><Text-field style="Annotation Title" layout="Annotation Title">MSc Modelling and Simulation of  Mechatronics Systems</Text-field>
</Input>
<Input><Text-field style="Title" layout="Title">EXTREME SWING
STUDY AND DESIGN AN AMUSEMENT RIDE:
Winx Mechanism</Text-field>
</Input>
</Group>
<Group labelreference="L40609" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group><Text-field style="Author" layout="Author">release 1.0 - date: 09/05/2020</Text-field>
<Group labelreference="L40606" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L40605" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group></Table-Cell></Table-Row></Table>
<Group labelreference="L63757" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L55429" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 1" layout="Heading 1"><Font size="24">RECURSIVE</Font></Text-field>
</Input>
</Group>
<Group labelreference="L63758" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Initial Settings</Font></Text-field></Title>
<Group labelreference="L55431" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">restart:
with(plots):
cc := ColorTools:-GetPalette(&quot;spring&quot;):
plots[setcolors](&quot;spring&quot;):
interface(rtablesize=20):
with(MBSymba_r6):with(LinearAlgebra):</Text-field>
</Input>
</Group>
<Group labelreference="L55432" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">DATA</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L55433" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">data := {L1 = 1.5*195-25, L2 = 1.5*266-25, L3 = 1.5*130, L4 = 1.5*59.3, L5 = 1.5*175, L6 = 1.5*207, L7 = 1.5*64.9, L8 = 1.5*64.9, L9 = 120, L10=40, phi1 = -Pi/5, phi2 = Pi/4};</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Kinematics</Font></Text-field></Title>
<Group labelreference="L4" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Global referrence frame</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L5" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF0  := ground;
P0 := origin(RF0):<Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2I1EhRictSSdtc3BhY2VHRiQ2Ji8lJ2hlaWdodEdRJjAuMGV4RicvJSZ3aWR0aEdRJjAuMGVtRicvJSZkZXB0aEdGNC8lKmxpbmVicmVha0dRKG5ld2xpbmVGJy1GMDYmRjJGNUY4L0Y7USVhdXRvRidGKy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJw==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2I1EhRictSSdtc3BhY2VHRiQ2Ji8lJ2hlaWdodEdRJjAuMGV4RicvJSZ3aWR0aEdRJjAuMGVtRicvJSZkZXB0aEdGNC8lKmxpbmVicmVha0dRKG5ld2xpbmVGJy1GMDYmRjJGNUY4L0Y7USVhdXRvRidGKy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJw==</Equation></Text-field>
</Input>
</Group>
<Group labelreference="L6" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Body 1 reference frame</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L7" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF1_r := RF0.rotate('Z',theta1(t));
P1_r := origin(RF1_r):
<Font style="Text">Parameters:
</Font>q1_r := [theta1(t)]:</Text-field>
</Input>
</Group>
<Group labelreference="L9" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 2</Font> </Text-field><Text-field style="Text" layout="Normal">Reference frame  # theta2 positivo verso il basso</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L11" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF2_r:=RF1_r.translate(0,0,L1).rotate('Y',-theta2(t));
P2_r:=origin(RF2_r):</Text-field>
</Input>
</Group>
<Group labelreference="L14" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Auxiliary reference frames p2 and p3</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L15" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RFp_2r := RF2_r.translate(L3,0,0);
Pp_2r := origin(RFp_2r):</Text-field>
</Input>
</Group>
<Group labelreference="L17" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font style="Text">Parameters:
</Font>q2_r := [theta2(t)]:</Text-field>
</Input>
</Group>
<Group labelreference="L53" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 3 (rotation around y in negative sense)</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L52" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#theta3 positivo verso il basso</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L55" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RFp_3r:=RFp_2r.translate(s(t), 0, 0);
Pp_3r:=origin(RFp_3r):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L50" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF3_r := RFp_3r.translate(L4,0,0).rotate('Y',theta3(t));
P3_r := origin(RF3_r):</Text-field>
</Input>
</Group>
<Group labelreference="L54" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font style="Text">Parameters:
</Font>q3_r := [theta3(t)]:</Text-field>
</Input>
</Group>
<Group labelreference="L12" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 4</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L24" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF4_r := RF1_r.translate(0,0,L2).rotate('Y',-theta4(t));
P4_r := origin(RF4_r):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L26" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RFp_4r :=RF4_r.translate(L5,0,0);
Pp_4r := origin(RFp_4r):</Text-field>
</Input>
</Group>
<Group labelreference="L27" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 5</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L28" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RFp_5r := RFp_4r.translate(L6 * cos(phi1),0,L6 * sin(phi1));
Pp_5r := origin(RFp_5r):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L29" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF5_r := RFp_5r.rotate('Z',theta5(t));
P5_r := origin(RF5_r):</Text-field>
</Input>
</Group>
<Group labelreference="L49" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font style="Text">Parameters:
</Font>q5_r := [theta5(t)]:</Text-field>
</Input>
</Group>
<Group labelreference="L39" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 6</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L40" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RFp_6r := RF5_r.translate(L7+cos(phi2)*L8,sin(phi2)*L8,0).rotate('Z',phi2);
Pp_6r := origin(RFp_6r):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L41" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF6_r := RFp_6r.rotate('Y',theta6(t));
P6_r := origin(RF6_r):</Text-field>
</Input>
</Group>
<Group labelreference="L42" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">q6_r := [theta6(t)]:</Text-field>
</Input>
</Group>
<Group labelreference="L54280" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Seat</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L54281" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RFSeat := RF6_r.translate(L10,0,-L9);
PSeat  := origin(RFSeat):</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Constraints</Font></Text-field></Title>
<Group labelreference="L55435" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Get points to check prismatic joint</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L61" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">P3_r_proj := project(P3_r, RF1_r):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L60" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pp_4r_proj := project(Pp_4r, RF1_r):</Text-field>
</Input>
</Group>
<Group labelreference="L55436" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Get all the constraints given by prismatic joint</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">TotalPhi := comp_XYZ(join_points(P3_r_proj,Pp_4r_proj)): &lt;%&gt;;</Text-field>
</Input>
</Group>
<Group labelreference="L55437" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Remove redundant constraint</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Phi := [TotalPhi[1],TotalPhi[3]]: &lt;%&gt;;</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L64" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">qd_vars := {theta2(t), theta4(t)};
qi_vars := {theta1(t),s(t),theta5(t),theta6(t)};
q_vars := {theta1(t),s(t),theta2(t), theta4(t),theta5(t), theta6(t)};</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L59" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">kin := solve(subs(data,Phi), qd_vars);</Text-field>
</Input>
</Group>
<Group labelreference="L55463" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font size="18" bold="true">Constraints' Plots</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L55464" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" spaceabove="0" linebreak="space" rightmargin="0" linespacing="0.0" initial="0" firstindent="0" leftmargin="0" bulletsuffix="" alignment="left" bullet="none" spacebelow="0" pagebreak-before="false">display(
plot(subs( kin, data, s(t) = st, theta2(t)*180/Pi), st = 0..100, color = cc[1], legend = theta2),
plot(subs( kin, data, s(t) = st, theta4(t)*180/Pi), st = 0..100, color = cc[2], legend = theta4),
<Font encoding="UTF-8">labels = [s, \302\260],</Font>
<Font encoding="UTF-8">title = &quot; Position analysis: position dependent coordinates\134n&quot;)</Font>;</Text-field>
</Input>
</Group>
<Group labelreference="L55438" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">UTILS Functions</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L43745" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">q_vars_to_symbol := {seq(q_vars[i] = op(0, q_vars[i]), i = 1 .. nops(q_vars))};</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L43746" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">q_vars_to_function := {seq(op(0,lhs(q_vars_to_symbol[i])) =  lhs(q_vars_to_symbol[i]), i = 1 .. nops(q_vars_to_symbol))};</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Plot</Font></Text-field></Title><Presentation-Block>
<Group view="code" labelreference="L36832" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">draw_mech:=proc(kin_param::{set(`=`)}, data::{set(`=`)}, dof::{set(`=`)},$)<Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2I1EhRictSSdtc3BhY2VHRiQ2Ji8lJ2hlaWdodEdRJjAuMGV4RicvJSZ3aWR0aEdRJjAuMGVtRicvJSZkZXB0aEdGNC8lKmxpbmVicmVha0dRKG5ld2xpbmVGJy1JI21vR0YkNi1RIn5GJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkYvJSlzdHJldGNoeUdGRi8lKnN5bW1ldHJpY0dGRi8lKGxhcmdlb3BHRkYvJS5tb3ZhYmxlbGltaXRzR0ZGLyUnYWNjZW50R0ZGLyUnbHNwYWNlR0Y3LyUncnNwYWNlR0Y3Ri8tRjA2JkYyRjVGOC9GO1ElYXV0b0YnRisvJStleGVjdXRhYmxlR0ZGRkE=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2I1EhRictSSdtc3BhY2VHRiQ2Ji8lJ2hlaWdodEdRJjAuMGV4RicvJSZ3aWR0aEdRJjAuMGVtRicvJSZkZXB0aEdGNC8lKmxpbmVicmVha0dRKG5ld2xpbmVGJy1JI21vR0YkNi1RIn5GJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkYvJSlzdHJldGNoeUdGRi8lKnN5bW1ldHJpY0dGRi8lKGxhcmdlb3BHRkYvJS5tb3ZhYmxlbGltaXRzR0ZGLyUnYWNjZW50R0ZGLyUnbHNwYWNlR0Y3LyUncnNwYWNlR0Y3Ri8tRjA2JkYyRjVGOC9GO1ElYXV0b0YnRisvJStleGVjdXRhYmxlR0ZGRkE=</Equation>local p0,p1, p2, p3, p4, p5, p5_a,p6,pp2,pp3,r,lt,p6_a,p6_b,p_seat, p6x, p6y, p6z:
r:=10:lt:=10:
p0:=subs(kin_param,data,dof,[comp_XYZ(P0,ground)]):
p1:=subs(kin_param,data,dof,[comp_XYZ(P1_r,ground)]):
p2:=subs(kin_param,data,dof,[comp_XYZ(P2_r,ground)]):
p3:=subs(kin_param,data,dof,[comp_XYZ(P3_r,ground)]):
p4:=subs(kin_param,data,dof,[comp_XYZ(P4_r,ground)]):
p5:=subs(kin_param,data,dof,[comp_XYZ(P5_r,ground)]):
p5_a:=subs(kin_param,data,dof,[comp_XYZ(P5_r+make_VECTOR(RF5_r, L7,0,0),ground)]):
p6:=subs(kin_param,data,dof,[comp_XYZ(P6_r,ground)]):
p6_a:=subs(kin_param,data,dof,[comp_XYZ(P6_r+make_VECTOR(RF6_r, 0,0,-L9),ground)]):
p6_b:=subs(kin_param,data,dof,[comp_XYZ(P6_r+make_VECTOR(RF6_r, 0,0,-L9)+make_VECTOR(RF6_r, L10,0,0),ground)]):
#p_seat:=subs(kin_param,data,dof,[comp_XYZ(PSeat,ground)]):
pp2:=subs(kin_param,data,dof,[comp_XYZ(Pp_2r,ground)]):
pp3:=subs(kin_param,data,dof,[comp_XYZ(Pp_3r,ground)]):

p6x:=subs(kin_param,data,dof,[comp_XYZ(P6_r+make_VECTOR(RF6_r, 10,0,0),ground)]):
p6y:=subs(kin_param,data,dof,[comp_XYZ(P6_r+make_VECTOR(RF6_r, 0,10,0),ground)]):
p6z:=subs(kin_param,data,dof,[comp_XYZ(P6_r+make_VECTOR(RF6_r, 0,0,10),ground)]):

display(plottools:-sphere(p1,r,color=cc[1]),
plottools:-sphere(p2,r,color=cc[1]),
plottools:-sphere(p3,r,color=cc[1]),
plottools:-sphere(p4,r,color=cc[1]),
plottools:-sphere(p5,r,color=cc[1]),
plottools:-sphere(p5_a,r,color=cc[1]),
plottools:-sphere(p6,r,color=cc[1]),
plottools:-sphere(p6_a,r,color=cc[1]),
plottools:-sphere(p6_b,r,color=cc[1]),
plottools:-sphere(pp2,r,color=cc[1]),
plottools:-sphere(pp3,r,color=cc[1]),
#plottools:-sphere(p_seat,20,color=cc[1]),
plottools:-line(p1,p2,color=&quot;Blue&quot;, thickness=lt),
plottools:-line(p2,p4,color=&quot;Blue&quot;, thickness=lt),
plottools:-line(p2,pp2,color=&quot;Green&quot;, thickness=lt),
plottools:-line(p3,pp3,color=&quot;Blue&quot;, thickness=lt),
plottools:-line(p4,p3,color=&quot;Red&quot;, thickness=lt),
plottools:-line(p3,p5,color=&quot;Red&quot;, thickness=lt),
plottools:-line(p5,p5_a,color=&quot;Orange&quot;, thickness=lt),
plottools:-line(p5_a,p6,color=&quot;Yellow&quot;, thickness=lt),
plottools:-line(p6,p6_a,color=&quot;Blue&quot;, thickness=lt),
plottools:-line(p6_a,p6_b,color=&quot;Blue&quot;, thickness=lt),
plots:-arrow(p0,[10,0,0],color=&quot;Red&quot;, shape=arrow),
plots:-arrow(p0,[0,10,0],color=&quot;Green&quot;, shape=arrow),
plots:-arrow(p0,[0,0,10],color=&quot;Black&quot;, shape=arrow),

#plottools:-line(p6,p6x,color=&quot;Red&quot;, thickness=lt),
#plottools:-line(p6,p6y,color=&quot;Green&quot;, thickness=lt),
#plottools:-line(p6,p6z,color=&quot;Black&quot;, thickness=lt),
scaling=constrained,
axes=boxed
):
end:</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L63760" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Plot mechanism for animating</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63761" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">draw_mech_for_animate:=proc(all_sols::list, index, data::{set(`=`)}, dofs::list,$)
local sol_kine, dof:
sol_kine:=all_sols[trunc(index)]:
dof:=dofs[trunc(index)]:
draw_mech(sol_kine,data,dof):
end:</Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Working Space</Font></Text-field></Title><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L42177" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dim_of_s:=10:    dim_of_theta1:=10:
solutions_workingspace := Array(1..dim_of_s*dim_of_theta1,[]):
dofs_workingspace:= Array(1..dim_of_s*dim_of_theta1,[]):
x_seat := Array(1 .. dim_of_s*dim_of_theta1, []):
y_seat := Array(1 .. dim_of_s*dim_of_theta1, []):
z_seat := Array(1 .. dim_of_s*dim_of_theta1, []):
i:=1:
sol_tmp:=1:
for si from 0 to dim_of_s-1 do
  for th1i from 0 to dim_of_theta1-1 do
    #for th5i from Pi to 2 do
    #for th6i from 0 to 2 do

    dofs_workingspace[i] := {s(t) = si*8.5, theta1(t) = th1i*(2*Pi/dim_of_theta1), theta5(t) = 0, theta6(t) = 0}:  ##Maximum extension
    #solutions_workingspace[i] := fsolve(subs(q_vars_to_symbol,data,dofs_workingspace[i],Phi),guess);

    solutions_workingspace[i] := simplify(subs(data,dofs_workingspace[i],kin));
       
    sol_tmp:= simplify(subs(data, dofs_workingspace[i],solutions_workingspace[i], &lt;comp_XYZ(PSeat, RF0)&gt;));
    x_seat[i]:=sol_tmp[1];
    y_seat[i]:=sol_tmp[2];
    z_seat[i]:=sol_tmp[3];
    i:=i+1;

    #end do:
    #end do:
  end do:
end do:</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L55476" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">MIN &amp; MAX of WINX WorkingSpace (calculated in cm)</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L42173" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">XXXX := Vector(convert(x_seat, list)): X=[min(XXXX), max(XXXX)];
YYYY := Vector(convert(y_seat, list)): Y=[min(YYYY), max(YYYY)];
ZZZZ := Vector(convert(z_seat, list)): Z=[min(ZZZZ), max(ZZZZ)];</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L55477" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Plot of WorkingSpace</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L42175" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Ptriang := plots:-surfdata( &lt;XXXX|YYYY|ZZZZ&gt;, source=irregular ):

plots:-display( Ptriang,
                plots:-pointplot3d(&lt;XXXX|YYYY|ZZZZ&gt;,symbolsize=20,color=red),
                axes=box );</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L50959" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Animate Plot (at your own peril)</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L42174" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#animate(draw_mech_for_animate, [convert(solutions_workingspace, list), INDEX, data, convert(dofs_workingspace, list)], INDEX = 1 .. dim_of_s*dim_of_theta1, frames = dim_of_s*dim_of_theta1);</Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" size="24" layout="Heading 1"><Font size="22">Initial Position Problem - </Font><Font size="18">Analytic method</Font></Text-field></Title>
<Group labelreference="L55588" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Find <Font bold="true">Singular Configurations</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L37066" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">all_kine_sol := [allvalues(subs(s(t) = st, kin))]:
nops(all_kine_sol);</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L37068" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">singular(rhs(all_kine_sol[1][1]));</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L37069" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">singular(rhs(all_kine_sol[1][2]));</Text-field>
</Input>
</Group>
<Group labelreference="L55589" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Initial Configuration</Font></Text-field>
</Input>
</Group><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L55594" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dof := {s(t) = 0, theta1(t) = 0, theta5(t) = 0, theta6(t) = 0}:
evalf(simplify(subs(dof, data, kin), explicit)):
%% union %;
evalf(subs(data,%,&lt;comp_XYZ(project(origin(RFSeat), RF0))&gt;));</Text-field>
</Input>
</Group></Presentation-Block>
<Group hide-input="false" labelreference="L55593" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">draw_mech(kin, data, dof);</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Velocity</Font></Text-field></Title><Presentation-Block>
<Group view="code" labelreference="L39115" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font size="16" bold="true">Jacobians:</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L39116" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">JPhiD := jacobianF(Phi,qd_vars): Rank(JPhiD)=2;
JPhiI := jacobianF(Phi,qi_vars): Rank(JPhiI)=1;

Tau := (simplify(-LinearAlgebra:-MatrixInverse(JPhiD).JPhiI, trig)):
Dimension(Tau);</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group labelreference="L39112" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Velocities of dependent coordinates</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L39114" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">qd_vars_dot := Tau.&lt;op(diff(qi_vars, t))&gt;</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L39118" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true" foreground="[128,0,0]">Substitution expression</Font> for velocities</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L39119" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs_qd_vars_vel := [seq( diff(qd_vars[i],t) = qd_vars_dot[i],i=1..nops(qd_vars))];
nops(%);</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L39900" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" bold="false" layout="Normal"><Font bold="true">display( 
plot(subs(subs_qd_vars_vel, kin, data, <Font opaque="true" background="[255,255,0]" foreground="[0,0,0]">diff(s(t),t) = 1</Font>, s(t) = st, qd_vars_dot[1]*180/Pi), st = 0..100,color=cc[1],legend=typeset(diff(qd_vars[1],t))),
plot(subs(subs_qd_vars_vel, kin, data, <Font opaque="true" background="[255,255,0]">diff(s(t),t) = 1</Font>, s(t) = st, qd_vars_dot[2]*180/Pi), st = 0..100,color=cc[2],legend=typeset(diff(qd_vars[2],t))),
         labels = [typeset(s,&quot;[m]&quot;),vel],
         title = &quot; Velocity with driven body <Font opaque="true" background="[255,255,0]">moving at constant velocity rate</Font>&quot;);</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L39121" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Singular configurations</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L39120" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">eq_det := simplify(LinearAlgebra:-Determinant(JPhiD));</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L39113" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">We compute analytical singular configurations</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L39117" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">SCs := solve( subs(data,[op(Phi) , eq_det]) , qd_vars union qi_vars, explicit=true): nops(&lt;SCs&gt;);</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L39123" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font opaque="true" background="[255,255,0]">The SCs evaluated with the parameters of the system
<Font bold="true">SCs exists only on first option, with s(t)=85</Font></Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L39124" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">&lt;SCs&gt;[1];</Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Acceleration</Font></Text-field></Title><Presentation-Block>
<Group labelreference="L39132" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">We can now compute the acceleration just by differentiating the velocities.
qD' = Tau(qD,qI).qI'
<Font underline="true">Remember that accelerations of dependents are: qD'' = Tau.qI''+diff(Tau,t).qD';</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L39125" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#qD_dot;</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">qd_vars_acc := simplify( map(diff,qd_vars_dot,t),size): 
AA,res := LinearAlgebra:-GenerateMatrix(convert(qd_vars_acc,list),diff(qi_vars,t,t)):
res:</Text-field>
</Input>
<Input><Text-field style="Text" layout="Normal">Proof:</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">simplify(AA-Tau);</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group hide-input="false" labelreference="L56103" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group labelreference="L39135" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">In acceleration analysis, positions (i.e. coordinate values) and velocities of the coordinates be known</Text-field>
</Input>
</Group>
<Group labelreference="L39130" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">here the substitution can be done analytically since the model is not complex.</Text-field><Text-field style="Text" layout="Normal">However, itr would be better to compute velocities and accelerations in sequence given the position, velocity and acceleration of independent:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L39129" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">qd_vars_acc_full := simplify(subs( subs_qd_vars_vel,qd_vars_acc),size):

<Font style="Text">Can be rewritten as: AA1.qI''+AA2.qI'^2:</Font>

AA1 ,  res := LinearAlgebra:-GenerateMatrix(convert(qd_vars_acc_full,list),diff(qi_vars,t,t)): res:
AA2 ,  res := LinearAlgebra:-<Font opaque="true">GenerateMatrix(subs(diff(s(t),t)^2=qI2,convert(-res,l</Font>ist)),[qI2]): res;

simplify(AA1-subs(subs_qd_vars_vel,AA));#PROOF
qD_acc: &lt;%&gt;:
qD_acc_full:&lt;%&gt;:</Text-field>
</Input>
</Group>
<Group labelreference="L39126" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Reconstruct the solution</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L39131" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">ACC := AA1.&lt;s__dot__dot,0,0,0&gt;+AA2.&lt;s__dot2&gt;:</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L39668" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs_qd_vars_acc := {seq( diff(qd_vars[i],t,t) = ACC[i],i=1..nops(qd_vars))}:</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L39873" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">display( 
plot(subs(subs_qd_vars_acc, kin,data, s(t) = st,  s__dot__dot<Font opaque="true" background="[255,255,0]"> = 0</Font>, s__dot2 = 1, ACC[1]*180/Pi),st = 0..85,color=cc[1],legend=typeset(diff(qd_vars[1],t,t))),
plot(subs(subs_qd_vars_acc, kin,data, s(t) = st, s__dot__dot<Font opaque="true" background="[255,255,0]"> = 0</Font>, s__dot2 = 1, ACC[2]*180/Pi),st = 0..85,color=cc[2],legend=typeset(diff(qd_vars[2],t,t))),
         labels = [typeset(s,&quot;[m]&quot;),acc],
         title = &quot; Accelerations with driven body moving at constant velocity rate&quot;);</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L56100" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L40454" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" size="24" layout="Heading 1"><Font size="22">Rehonomous Constraints</Font></Text-field></Title>
<Group labelreference="L46543" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Invece di metter questi profili basterebbe metterci i valori ottenuti numericamente nelle sezioni finali come funzione del tempo</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L46560" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">data_profiles:={  alpha__s = 30, omega__s = Pi/3, omega__1 = 0.1, omega__5 = 0.5, alpha__6 = Pi/4, omega__6 = 0.6};</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L46557" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">s_profile_time := alpha__s - alpha__s*cos(omega__s*t);     
theta1_profile_time := omega__1*t; 
theta5_profile_time := omega__5*t; 
theta6_profile_time := alpha__6*sin(omega__6*t); 
</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L46551" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">PSI := Phi union 
[s(t) - s_profile_time] union 
[theta1(t) - theta1_profile_time] union 
[theta5(t) - theta5_profile_time] union 
[theta6(t) - theta6_profile_time]: &lt;%&gt;;</Text-field>
</Input>
</Group>
<Group labelreference="L46539" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font size="18">Position</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L46556" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">kin_augmented := solve(subs(data,PSI), q_vars):</Text-field>
</Input>
</Group><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L46558" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">kin_solutions := Vector( [ seq( subs(data,data_profiles, t=x, kin_augmented), x=0..180) ] ):
display( 
plot(   [  seq(  [  i  ,  rhs(kin_solutions[i][1])  ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions)  )  ] ,color=cc[1],legend=typeset(q_vars[1]) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions[i][2]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions)  )  ] ,color=cc[2],legend=typeset(q_vars[2]) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions[i][3]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions)  )  ] ,color=cc[3],legend=typeset(q_vars[3]) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions[i][4]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions)  )  ] ,color=cc[4],legend=typeset(q_vars[4]) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions[i][5]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions)  )  ] ,color=cc[5],legend=typeset(q_vars[5]) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions[i][6]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions)  )  ] ,color=cc[6],legend=typeset(q_vars[6]) ),
         labels = [typeset(t,&quot;[s]&quot;),Position],
         title = &quot;Position&quot;);</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L64892" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font size="18">Velocity</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L46553" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Aug_Jac := jacobianF(PSI, q_vars): Rank(%) = Dimension(Aug_Jac):
solve(Determinant(subs(data,Aug_Jac))): #Aug_Jac in Not Singular</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L46549" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">q_vars_dot := -(MatrixInverse(Aug_Jac)).&lt;diff(PSI,t)&gt;:
subs_q_vars_vel := [seq( diff(q_vars[i],t) = solve(q_vars_dot[i],diff(q_vars[i],t)),i=1..Dimension(q_vars_dot))];
</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L57059" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">kin_augmented_vel := [seq( diff(q_vars[i],t) = subs(kin_augmented, op(subs_q_vars_vel[i])[2]) ,i=1..Dimension(q_vars_dot))]:</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L46552" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">kin_solutions_vel := Vector( [ seq( [evalf(subs(subs_q_vars_vel, data, data_profiles, kin_augmented,  kin_solutions[x+1], t=x,data, data_profiles,subs_q_vars_vel))]  , x = 0..180) ] ):
display( 
plot(   [  seq(  [  i  ,  rhs(kin_solutions_vel[i][1])  ]          ,  i=1..LinearAlgebra[Dimension](kin_solutions_vel)  )  ] ,color=cc[1], legend=typeset(diff(q_vars[1],t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_vel[i][2]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_vel)  )  ] ,color=cc[2], legend=typeset(diff(q_vars[2],t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_vel[i][3]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_vel)  )  ] ,color=cc[3], legend=typeset(diff(q_vars[3],t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_vel[i][4]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_vel)  )  ] ,color=cc[4], legend=typeset(diff(q_vars[4],t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_vel[i][5]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_vel)  )  ] ,color=cc[5], legend=typeset(diff(q_vars[5],t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_vel[i][6]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_vel)  )  ] ,color=cc[6], legend=typeset(diff(q_vars[6],t)) ),
         labels = [typeset(t,&quot;[s]&quot;),vel],
         title = &quot;Velocity&quot;);</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L46545" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font size="18">Acceleration</Font></Text-field>
</Input>
</Group></Presentation-Block>
<Group hide-input="false" labelreference="L46554" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">q_vars_dot_dot := -(MatrixInverse(Aug_Jac)).(diff(Aug_Jac, t).q_vars_dot + &lt;diff(PSI,t,t)&gt;):
subs_q_vars_acc := [seq( diff(q_vars[i],t,t) = solve(q_vars_dot_dot[i],diff(q_vars[i],t,t)),i=1..Dimension(q_vars_dot_dot))]:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L57061" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">kin_augmented_acc := [seq( diff(q_vars[i],t,t) = subs(kin_augmented, op(subs_q_vars_acc[i])[2]) ,i=1..Dimension(q_vars_dot_dot))]:</Text-field>
</Input>
</Group>
<Group labelreference="L46540" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">kin_solutions_acc := Vector( [ seq( [evalf(subs(subs_q_vars_acc, subs_q_vars_vel, kin_augmented,  kin_solutions[x+1], t=x, data_profiles,data, subs_q_vars_acc))]  , x = 0..180) ] ):
display( 
plot(   [  seq(  [  i  ,  rhs(kin_solutions_acc[i][1])  ]          ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ] ,color=cc[1], legend=typeset(diff(q_vars[1],t,t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_acc[i][2]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ] ,color=cc[2], legend=typeset(diff(q_vars[2],t,t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_acc[i][3]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ] ,color=cc[3], legend=typeset(diff(q_vars[3],t,t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_acc[i][4]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ] ,color=cc[4], legend=typeset(diff(q_vars[4],t,t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_acc[i][5]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ] ,color=cc[5], legend=typeset(diff(q_vars[5],t,t)) ),
plot(   [  seq(  [  i  ,  rhs(kin_solutions_acc[i][6]) * 180/Pi ]  ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ] ,color=cc[6], legend=typeset(diff(q_vars[6],t,t)) ),
         labels = [typeset(t,&quot;[s]&quot;),acc],
         title = &quot;Acceleration&quot;);</Text-field>
</Input>
</Group><Presentation-Block>
<Group view="code" labelreference="L46547" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font size="18">Jerk (using splines)</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L48872" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">derive_spline := proc(_spline, T, degree) 
  local L, i;
  L := convert(_spline, list);
  L:=piecewise(seq([L[2*i - 1], diff(L[2*i], `$`(T,degree))][], i = 1 .. floor(1/2*nops(L))), diff(L[-1], `$`(T,degree))); 
  return L:
end:</Text-field>
</Input>
</Group></Presentation-Block>
<Group hide-input="false" labelreference="L46555" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">ACC_POINTS_S := [  seq(   rhs(kin_solutions_acc[i][1])   ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ]:
CurveFitting:-Spline( &lt; [seq(i, i=0..180)] &gt; , &lt;ACC_POINTS_S&gt; , Timer):
d2St_spline := unapply(%,[Timer]):

ACC_POINTS_THETA1 := [  seq(   rhs(kin_solutions_acc[i][2])   ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ]:
CurveFitting:-Spline( &lt; [seq(i, i=0..180)] &gt; , &lt;ACC_POINTS_THETA1&gt; , Timer):
d2THETA1t_spline := unapply(%,[Timer]):

ACC_POINTS_THETA2 := [  seq(   rhs(kin_solutions_acc[i][3])   ,  i=2..LinearAlgebra[Dimension](kin_solutions_acc)  )  ]:
CurveFitting:-Spline( &lt; [seq(i, i=1..180)] &gt; , &lt;ACC_POINTS_THETA2&gt; , Timer):
d2THETA2t_spline := unapply(%,[Timer]):

ACC_POINTS_THETA4 := [  seq(   rhs(kin_solutions_acc[i][4])   ,  i=2..LinearAlgebra[Dimension](kin_solutions_acc)  )  ]:
CurveFitting:-Spline( &lt; [seq(i, i=1..180)] &gt; , &lt;ACC_POINTS_THETA4&gt; , Timer):
d2THETA4t_spline := unapply(%,[Timer]):

ACC_POINTS_THETA5 := [  seq(   rhs(kin_solutions_acc[i][5])   ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ]:
CurveFitting:-Spline( &lt; [seq(i, i=0..180)] &gt; , &lt;ACC_POINTS_THETA5&gt; , Timer):
d2THETA5t_spline := unapply(%,[Timer]):

ACC_POINTS_THETA6 := [  seq(   rhs(kin_solutions_acc[i][6])   ,  i=1..LinearAlgebra[Dimension](kin_solutions_acc)  )  ]:
CurveFitting:-Spline( &lt; [seq(i, i=0..180)] &gt; , &lt;ACC_POINTS_THETA6&gt; , Timer):
d2THETA6t_spline := unapply(%,[Timer]):
</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L48296" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">q_vars_jerk_profile := Vector([
derive_spline(d2St_spline(Timer), Timer, 1),
derive_spline(d2THETA1t_spline(Timer), Timer, 1),
derive_spline(d2THETA2t_spline(Timer), Timer, 1),
derive_spline(d2THETA4t_spline(Timer), Timer, 1),
derive_spline(d2THETA5t_spline(Timer), Timer, 1),
derive_spline(d2THETA6t_spline(Timer), Timer, 1)
]):</Text-field>
</Input>
</Group>
<Group labelreference="L48295" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">display(
plot(q_vars_jerk_profile[1](Timer), Timer=0..180, color=cc[1],  legend=&quot;jerk S&quot;),
plot(q_vars_jerk_profile[2](Timer), Timer=0..180, color=cc[2],  legend=&quot;jerk THETA1&quot;),
plot(q_vars_jerk_profile[3](Timer), Timer=0..180, color=cc[3],  legend=&quot;jerk THETA2&quot;),
plot(q_vars_jerk_profile[4](Timer), Timer=0..180, color=cc[4],  legend=&quot;jerk THETA4&quot;),
plot(q_vars_jerk_profile[5](Timer), Timer=0..180, color=cc[5],  legend=&quot;jerk THETA5&quot;),
plot(q_vars_jerk_profile[6](Timer), Timer=0..180, color=cc[6],  legend=&quot;jerk THETA6&quot;),
         labels = [typeset(t,&quot;[s]&quot;),jerk],
         title = &quot;Jerk&quot;);</Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Seat Profile</Text-field></Title>
<Group hide-input="false" labelreference="L48425" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Seat_ground := comp_XYZ(project(origin(RFSeat), RF0)): # Projected to ground
Seat := comp_XYZ(project(origin(RFSeat), RFSeat)):&lt;%&gt;; # Projected to Seat
</Text-field>
</Input>
</Group>
<Group labelreference="L48429" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">POSITION wrt ground</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L48427" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">seat_profile_ground := Vector( [ seq( [ subs( data,
{s(t) = rhs(kin_solutions[x+1][1])},  
{theta1(t) = rhs(kin_solutions[x+1][2])}, 
{theta2(t) = rhs(kin_solutions[x+1][3])}, 
{theta4(t) = rhs(kin_solutions[x+1][4])}, 
{theta5(t) = rhs(kin_solutions[x+1][5])}, 
{theta6(t) = rhs(kin_solutions[x+1][6])}, 
[Seat_ground]) ] , x=0..180) ] ):
display( 
plot(   [  seq(  [  i  ,  seat_profile_ground[i][1]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_ground)  )  ] ,color=cc[1],legend=typeset(x) ),
plot(   [  seq(  [  i  ,  seat_profile_ground[i][2]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_ground)  )  ] ,color=cc[2],legend=typeset(y) ), 
plot(   [  seq(  [  i  ,  seat_profile_ground[i][3]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_ground)  )  ] ,color=cc[3],legend=typeset(z) ), 
         labels = [typeset(t,&quot;[s]&quot;),typeset(pos,&quot;[m]&quot;)],
         title = &quot; Position &quot;);</Text-field>
</Input>
</Group>
<Group labelreference="L48418" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">VELOCITY</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L48426" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">_seat_profile_vel_ground := diff(Seat_ground[1], t), diff(Seat_ground[2], t), diff(Seat_ground[3], t): # Projected to ground
_seat_profile_vel := comp_XYZ(project(velocity(origin(RFSeat)), RFSeat)): # Projected to Seat</Text-field>
</Input>
</Group>
<Group labelreference="L48421" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">seat_profile_vel := Vector( [ seq( [ subs( data,
{diff(s(t),t) = rhs(kin_solutions_vel[x+1][1])},  
{diff(theta1(t),t) = rhs(kin_solutions_vel[x+1][2])}, 
{diff(theta2(t),t) = rhs(kin_solutions_vel[x+1][3])}, 
{diff(theta4(t),t) = rhs(kin_solutions_vel[x+1][4])}, 
{diff(theta5(t),t) = rhs(kin_solutions_vel[x+1][5])}, 
{diff(theta6(t),t) = rhs(kin_solutions_vel[x+1][6])}, 
{s(t) = rhs(kin_solutions[x+1][1])},  
{theta1(t) = rhs(kin_solutions[x+1][2])}, 
{theta2(t) = rhs(kin_solutions[x+1][3])}, 
{theta4(t) = rhs(kin_solutions[x+1][4])}, 
{theta5(t) = rhs(kin_solutions[x+1][5])}, 
{theta6(t) = rhs(kin_solutions[x+1][6])}, 
[_seat_profile_vel]) ] , x=0..180) ] ):

display( 
plot(   [  seq(  [  i  ,  seat_profile_vel[i][1]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_vel)  )  ] ,color=cc[1],legend=typeset(x__dot) ),
plot(   [  seq(  [  i  ,  seat_profile_vel[i][2]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_vel)  )  ] ,color=cc[2],legend=typeset(y__dot) ), 
plot(   [  seq(  [  i  ,  seat_profile_vel[i][3]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_vel)  )  ] ,color=cc[3],legend=typeset(z__dot) ), 
         labels = [typeset(t,&quot;[s]&quot;),typeset(vel,&quot;[m/s]&quot;)],
         title = &quot; Velocity &quot;);</Text-field>
</Input>
</Group>
<Group labelreference="L48428" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" bold="true" layout="Normal"><Font bold="true">ACCELERATION</Font></Text-field>
</Input>
</Group>
<Group labelreference="L48419" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">_seat_profile_acc_ground := diff(_seat_profile_vel_ground[1], t), diff(_seat_profile_vel_ground[2], t), diff(_seat_profile_vel_ground[3], t): # Projected to ground
_seat_profile_acc := comp_XYZ(project(acceleration(origin(RFSeat)), RFSeat)): # Projected to Seat</Text-field>
</Input>
</Group>
<Group labelreference="L48422" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">seat_profile_acc := Vector( [ seq( [ subs( data,
{diff(s(t),t,t) = rhs(kin_solutions_acc[x+1][1])},  
{diff(theta1(t),t,t) = rhs(kin_solutions_acc[x+1][2])}, 
{diff(theta2(t),t,t) = rhs(kin_solutions_acc[x+1][3])}, 
{diff(theta4(t),t,t) = rhs(kin_solutions_acc[x+1][4])}, 
{diff(theta5(t),t,t) = rhs(kin_solutions_acc[x+1][5])}, 
{diff(theta6(t),t,t) = rhs(kin_solutions_acc[x+1][6])}, 
{diff(s(t),t) = rhs(kin_solutions_vel[x+1][1])},  
{diff(theta1(t),t) = rhs(kin_solutions_vel[x+1][2])}, 
{diff(theta2(t),t) = rhs(kin_solutions_vel[x+1][3])}, 
{diff(theta4(t),t) = rhs(kin_solutions_vel[x+1][4])}, 
{diff(theta5(t),t) = rhs(kin_solutions_vel[x+1][5])}, 
{diff(theta6(t),t) = rhs(kin_solutions_vel[x+1][6])}, 
{s(t) = rhs(kin_solutions[x+1][1])},  
{theta1(t) = rhs(kin_solutions[x+1][2])}, 
{theta2(t) = rhs(kin_solutions[x+1][3])}, 
{theta4(t) = rhs(kin_solutions[x+1][4])}, 
{theta5(t) = rhs(kin_solutions[x+1][5])}, 
{theta6(t) = rhs(kin_solutions[x+1][6])}, 
[_seat_profile_acc]) ] , x=0..180) ] ):

display( 
plot(   [  seq(  [  i  ,  seat_profile_acc[i][1]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_acc)  )  ] ,color=cc[1],legend=typeset(x__dot__dot) ),
plot(   [  seq(  [  i  ,  seat_profile_acc[i][2]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_acc)  )  ] ,color=cc[2],legend=typeset(y__dot__dot) ), 
plot(   [  seq(  [  i  ,  seat_profile_acc[i][3]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_acc)  )  ] ,color=cc[3],legend=typeset(z__dot__dot) ), 
         labels = [typeset(t,&quot;[s]&quot;),typeset(acc,&quot;[m/s^2]&quot;)],
         title = &quot; Acceleration &quot;);</Text-field>
</Input>
</Group>
<Group labelreference="L48420" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" bold="true" layout="Normal"><Font bold="true">JERK</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L48424" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">_seat_profile_jerk_ground := diff(_seat_profile_acc_ground[1], t), diff(_seat_profile_acc_ground[2], t), diff(_seat_profile_acc_ground[3], t): # Projected to ground
_seat_profile_jerk := diff(_seat_profile_acc[1], t), diff(_seat_profile_acc[2], t), diff(_seat_profile_acc[3], t): # Projected to Seat</Text-field>
</Input>
</Group>
<Group labelreference="L48423" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">seat_profile_jerk := Vector( [ seq( [ subs( data,
{diff(s(t),t,t,t) = eval(q_vars_jerk_profile[1](Timer), Timer = x)},  
{diff(theta1(t),t,t,t) = eval(q_vars_jerk_profile[2](Timer), Timer = x)}, 
{diff(theta2(t),t,t,t) = eval(q_vars_jerk_profile[3](Timer), Timer = x)}, 
{diff(theta4(t),t,t,t) = eval(q_vars_jerk_profile[4](Timer), Timer = x)}, 
{diff(theta5(t),t,t,t) = eval(q_vars_jerk_profile[5](Timer), Timer = x)}, 
{diff(theta6(t),t,t,t) = eval(q_vars_jerk_profile[6](Timer), Timer = x)}, 
{diff(s(t),t,t) = rhs(kin_solutions_acc[x+1][1])},  
{diff(theta1(t),t,t) = rhs(kin_solutions_acc[x+1][2])}, 
{diff(theta2(t),t,t) = rhs(kin_solutions_acc[x+1][3])}, 
{diff(theta4(t),t,t) = rhs(kin_solutions_acc[x+1][4])}, 
{diff(theta5(t),t,t) = rhs(kin_solutions_acc[x+1][5])}, 
{diff(theta6(t),t,t) = rhs(kin_solutions_acc[x+1][6])}, 
{diff(s(t),t) = rhs(kin_solutions_vel[x+1][1])},  
{diff(theta1(t),t) = rhs(kin_solutions_vel[x+1][2])}, 
{diff(theta2(t),t) = rhs(kin_solutions_vel[x+1][3])}, 
{diff(theta4(t),t) = rhs(kin_solutions_vel[x+1][4])}, 
{diff(theta5(t),t) = rhs(kin_solutions_vel[x+1][5])}, 
{diff(theta6(t),t) = rhs(kin_solutions_vel[x+1][6])}, 
{s(t) = rhs(kin_solutions[x+1][1])},  
{theta1(t) = rhs(kin_solutions[x+1][2])}, 
{theta2(t) = rhs(kin_solutions[x+1][3])}, 
{theta4(t) = rhs(kin_solutions[x+1][4])}, 
{theta5(t) = rhs(kin_solutions[x+1][5])}, 
{theta6(t) = rhs(kin_solutions[x+1][6])}, 
[_seat_profile_jerk]) ] , x=0..180) ] ):

display( 
plot(   [  seq(  [  i  ,  seat_profile_jerk[i][1]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_jerk)  )  ] ,color=cc[1],legend=typeset(x__dot__dot__dot) ),
plot(   [  seq(  [  i  ,  seat_profile_jerk[i][2]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_jerk)  )  ] ,color=cc[2],legend=typeset(y__dot__dot__dot) ), 
plot(   [  seq(  [  i  ,  seat_profile_jerk[i][3]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_jerk)  )  ] ,color=cc[3],legend=typeset(z__dot__dot__dot) ), 
         labels = [typeset(t,&quot;[s]&quot;),typeset(jerk,&quot;[m/s^3]&quot;)],
         title = &quot; Jerk &quot;);</Text-field>
</Input>
</Group>
</Section>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="24">Animation</Font></Text-field></Title>
<Group hide-input="false" labelreference="L42965" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dof:={s(t)=40+sin(time)*10,theta1(t)=time,theta5(t)=-time,theta6(t)=-time}: 
animate(draw_mech, [kin, data, dof], time =0 .. 2*Pi);</Text-field>
</Input>
</Group>
<Group labelreference="L56652" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Think twice before executing 180 frames of those profile (&gt;300MB file):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L47656" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dof:={s(t)=subs(t=time,data_profiles,s_profile_time),theta1(t)=subs(t=time,data_profiles,theta1_profile_time),theta5(t)=subs(t=time,data_profiles,theta5_profile_time),theta6(t)=subs(t=time,data_profiles,theta6_profile_time)};
animate(draw_mech, [kin, data union data_profiles, dof], time=0..180,frames=36); </Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" size="22" layout="Heading 1"><Font size="22">Performance indexes</Font></Text-field></Title>
<Group hide-input="false" labelreference="L55428" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzZDLUkjbWlHRiQ2JVEkTUlORicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEtJlJpZ2h0YXJyb3c7RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRjEvJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSSVtc3ViR0YkNiYtRiw2JVEmYWxwaGFGJy9GMEY9RjktRiw2JVEic0YnRi9GMi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnL0krbXNlbWFudGljc0dGJFEnYXRvbWljRictRjY2LVEifkYnRjlGO0Y+L0ZBRj1GQkZERkZGSC9GS1EmMC4wZW1GJy9GTkZeby1GNjYtUSI9RidGOUY7Rj5GXG9GQkZERkZGSEZKRk0tSSNtbkdGJDYkUSI1RidGOS1GNjYtUSIsRidGOUY7L0Y/RjFGXG9GQkZERkZGSEZdby9GTlEsMC4zMzMzMzMzZW1GJ0Zpbi1GUDYmLUYsNiVRJm9tZWdhRidGVUY5RlZGWUZmbi1GNjYuRltvRi9GMkY7Rj5GXG9GQkZERkZGSEZdb0Zfby1GNjYuRmJvRi9GMkY7Rj5GXG9GQkZERkZGSEZKRk0tRmRvNiVRJDAuMUYnRi9GMi1GNjYuRmlvRi9GMkY7RmpvRlxvRkJGREZGRkhGXW9GW3BGYnAtRlA2JkZfcC1GLDYlUSIxRidGL0YyRllGZm5GYnBGZHBGZnBGaXBGYnAtRlA2JkZfcC1GLDYlRmZvRi9GMkZZRmZuRmJwRmRwLUZkbzYlRmhwLyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0Y5LUY2Ni5GaW9GZnFGOUY7RmpvRlxvRkJGREZGRkhGXW9GW3BGYnAtRlA2JkZfcC1GLDYlUSI2RidGL0YyRllGZm4tRjY2LkZbb0ZmcUY5RjtGPkZcb0ZCRkRGRkZIRl1vRl9vLUY2Ni5GYm9GZnFGOUY7Rj5GXG9GQkZERkZGSEZKRk1GYHJGZHFGZnFGOQ==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzZDLUkjbWlHRiQ2JVEkTUlORicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEtJlJpZ2h0YXJyb3c7RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRjEvJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSSVtc3ViR0YkNiYtRiw2JVEmYWxwaGFGJy9GMEY9RjktRiw2JVEic0YnRi9GMi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnL0krbXNlbWFudGljc0dGJFEnYXRvbWljRictRjY2LVEifkYnRjlGO0Y+L0ZBRj1GQkZERkZGSC9GS1EmMC4wZW1GJy9GTkZeby1GNjYtUSI9RidGOUY7Rj5GXG9GQkZERkZGSEZKRk0tSSNtbkdGJDYkUSI1RidGOS1GNjYtUSIsRidGOUY7L0Y/RjFGXG9GQkZERkZGSEZdby9GTlEsMC4zMzMzMzMzZW1GJ0Zpbi1GUDYmLUYsNiVRJm9tZWdhRidGVUY5RlZGWUZmbi1GNjYuRltvRi9GMkY7Rj5GXG9GQkZERkZGSEZdb0Zfby1GNjYuRmJvRi9GMkY7Rj5GXG9GQkZERkZGSEZKRk0tRmRvNiVRJDAuMUYnRi9GMi1GNjYuRmlvRi9GMkY7RmpvRlxvRkJGREZGRkhGXW9GW3BGYnAtRlA2JkZfcC1GLDYlUSIxRidGL0YyRllGZm5GYnBGZHBGZnBGaXBGYnAtRlA2JkZfcC1GLDYlRmZvRi9GMkZZRmZuRmJwRmRwLUZkbzYlRmhwLyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0Y5LUY2Ni5GaW9GZnFGOUY7RmpvRlxvRkJGREZGRkhGXW9GW3BGYnAtRlA2JkZfcC1GLDYlUSI2RidGL0YyRllGZm4tRjY2LkZbb0ZmcUY5RjtGPkZcb0ZCRkRGRkZIRl1vRl9vLUY2Ni5GYm9GZnFGOUY7Rj5GXG9GQkZERkZGSEZKRk1GYHJGZHFGZnFGOQ==</Equation>               <Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY9LUkjbWlHRiQ2I1EhRictSSNtb0dGJDYuUSJ+RicvJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGOy8lKXN0cmV0Y2h5R0Y7LyUqc3ltbWV0cmljR0Y7LyUobGFyZ2VvcEdGOy8lLm1vdmFibGVsaW1pdHNHRjsvJSdhY2NlbnRHRjsvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZKLUYwNi5RKiZ1bWludXMwO0YnRjNGNkY5RjxGPkZARkJGREZGL0ZJUSwwLjIyMjIyMjJlbUYnL0ZMRlFGTUZNRk1GTUZNRk1GTUZNRk1GTUZNRk1GTUZNRk1GTS1GLDYmUSNUT0YnLyUnaXRhbGljR1EldHJ1ZUYnRjMvRjdRJ2l0YWxpY0YnRi8tRiw2JlEjQkVGJ0ZWRjNGWUYvLUYsNiZRKFVQREFURURGJ0ZWRjNGWS1JJm10ZXh0R0YkNiVRYXM/Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzO0YnRjNGNkYrRjY=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY9LUkjbWlHRiQ2I1EhRictSSNtb0dGJDYuUSJ+RicvJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGOy8lKXN0cmV0Y2h5R0Y7LyUqc3ltbWV0cmljR0Y7LyUobGFyZ2VvcEdGOy8lLm1vdmFibGVsaW1pdHNHRjsvJSdhY2NlbnRHRjsvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZKLUYwNi5RKiZ1bWludXMwO0YnRjNGNkY5RjxGPkZARkJGREZGL0ZJUSwwLjIyMjIyMjJlbUYnL0ZMRlFGTUZNRk1GTUZNRk1GTUZNRk1GTUZNRk1GTUZNRk1GTS1GLDYmUSNUT0YnLyUnaXRhbGljR1EldHJ1ZUYnRjMvRjdRJ2l0YWxpY0YnRi8tRiw2JlEjQkVGJ0ZWRjNGWUYvLUYsNiZRKFVQREFURURGJ0ZWRjNGWS1JJm10ZXh0R0YkNiVRYXM/Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzOyZtaW51czsmbWludXM7Jm1pbnVzO0YnRjNGNkYrRjY=</Equation>
<Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzZkcC1JI21pR0YkNiVRJE1BWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RLSZSaWdodGFycm93O0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0YxLyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUklbXN1YkdGJDYmLUYsNiVRJmFscGhhRicvRjBGPUY5LUYsNiVRInNGJ0YvRjIvJS9zdWJzY3JpcHRzaGlmdEdRIjBGJy9JK21zZW1hbnRpY3NHRiRRJ2F0b21pY0YnLUY2Ni1RIn5GJ0Y5RjtGPi9GQUY9RkJGREZGRkgvRktRJjAuMGVtRicvRk5GXm8tRjY2LVEiPUYnRjlGO0Y+RlxvRkJGREZGRkhGSkZNLUkjbW5HRiQ2JFEjMzBGJ0Y5LUY2Ni1RIixGJ0Y5RjsvRj9GMUZcb0ZCRkRGRkZIRl1vL0ZOUSwwLjMzMzMzMzNlbUYnRmluLUZQNiYtRiw2JVEmb21lZ2FGJ0ZVRjlGVkZZRmZuLUY2Ni5GW29GL0YyRjtGPkZcb0ZCRkRGRkZIRl1vRl9vLUY2Ni5GYm9GL0YyRjtGPkZcb0ZCRkRGRkZIRkpGTS1GZG82JVEiMkYnRi9GMkZnb0ZicC1GUDYmRl9wLUYsNiVRIjFGJ0YvRjJGWUZmbkZicEZkcEZmcEZnb0ZicC1GUDYmRl9wLUYsNiVRIjVGJ0YvRjJGWUZmbi1GNjYvRltvRi8vJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnRjJGO0Y+RlxvRkJGREZGRkhGXW9GX28tRjY2L0Zib0YvRmVxRjJGO0Y+RlxvRkJGREZGRkhGSkZNLUZkbzYmRmhwRi9GZXFGMi1GNjYuRmlvRmVxRjlGO0Zqb0Zcb0ZCRkRGRkZIRl1vRltwRmJwLUZQNiZGX3AtRiw2JVEiNkYnRi9GMkZZRmZuLUY2Ni5GW29GZXFGOUY7Rj5GXG9GQkZERkZGSEZdb0Zfby1GNjYuRmJvRmVxRjlGO0Y+RlxvRkJGREZGRkhGSkZNRmNyLUZkbzYlRmJxRmVxRjlGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3ItRjY2LlEqJnVtaW51czA7RidGZXFGOUY7Rj5GXG9GQkZERkZGSC9GS1EsMC4yMjIyMjIyZW1GJy9GTkZdc0ZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpci1GLDYmUSNUT0YnRi9GZXFGMkZjci1GLDYmUSNCRUYnRi9GZXFGMkZjci1GLDYmUShVUERBVEVERidGL0ZlcUYyLUkmbXRleHRHRiQ2JVFhcz8mIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7RidGZXFGOS1GLDYjUSFGJ0ZlcUY5">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzZkcC1JI21pR0YkNiVRJE1BWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RLSZSaWdodGFycm93O0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0YxLyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUklbXN1YkdGJDYmLUYsNiVRJmFscGhhRicvRjBGPUY5LUYsNiVRInNGJ0YvRjIvJS9zdWJzY3JpcHRzaGlmdEdRIjBGJy9JK21zZW1hbnRpY3NHRiRRJ2F0b21pY0YnLUY2Ni1RIn5GJ0Y5RjtGPi9GQUY9RkJGREZGRkgvRktRJjAuMGVtRicvRk5GXm8tRjY2LVEiPUYnRjlGO0Y+RlxvRkJGREZGRkhGSkZNLUkjbW5HRiQ2JFEjMzBGJ0Y5LUY2Ni1RIixGJ0Y5RjsvRj9GMUZcb0ZCRkRGRkZIRl1vL0ZOUSwwLjMzMzMzMzNlbUYnRmluLUZQNiYtRiw2JVEmb21lZ2FGJ0ZVRjlGVkZZRmZuLUY2Ni5GW29GL0YyRjtGPkZcb0ZCRkRGRkZIRl1vRl9vLUY2Ni5GYm9GL0YyRjtGPkZcb0ZCRkRGRkZIRkpGTS1GZG82JVEiMkYnRi9GMkZnb0ZicC1GUDYmRl9wLUYsNiVRIjFGJ0YvRjJGWUZmbkZicEZkcEZmcEZnb0ZicC1GUDYmRl9wLUYsNiVRIjVGJ0YvRjJGWUZmbi1GNjYvRltvRi8vJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnRjJGO0Y+RlxvRkJGREZGRkhGXW9GX28tRjY2L0Zib0YvRmVxRjJGO0Y+RlxvRkJGREZGRkhGSkZNLUZkbzYmRmhwRi9GZXFGMi1GNjYuRmlvRmVxRjlGO0Zqb0Zcb0ZCRkRGRkZIRl1vRltwRmJwLUZQNiZGX3AtRiw2JVEiNkYnRi9GMkZZRmZuLUY2Ni5GW29GZXFGOUY7Rj5GXG9GQkZERkZGSEZdb0Zfby1GNjYuRmJvRmVxRjlGO0Y+RlxvRkJGREZGRkhGSkZNRmNyLUZkbzYlRmJxRmVxRjlGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3JGY3ItRjY2LlEqJnVtaW51czA7RidGZXFGOUY7Rj5GXG9GQkZERkZGSC9GS1EsMC4yMjIyMjIyZW1GJy9GTkZdc0ZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpckZpci1GLDYmUSNUT0YnRi9GZXFGMkZjci1GLDYmUSNCRUYnRi9GZXFGMkZjci1GLDYmUShVUERBVEVERidGL0ZlcUYyLUkmbXRleHRHRiQ2JVFhcz8mIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7JiM4NzIyOyYjODcyMjsmIzg3MjI7RidGZXFGOS1GLDYjUSFGJ0ZlcUY5</Equation></Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Fitness function</Text-field></Title>
<Group labelreference="L57341" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">fun_evaluation:=proc(data, {verbose := true}, $)
  local v_s := comp_XYZ(project(velocity(PSeat), RFSeat)):
  local vel_seat := subs(data, subs(kin_augmented_vel, kin_augmented, &lt;v_s[1], v_s[2], v_s[3]&gt;)):
  local a_s := comp_XYZ(project(acceleration(PSeat) + make_VECTOR(RF0, 0, 0, -9.8*100), RFSeat)):
  local acc_seat := subs(data, subs(kin_augmented_acc, kin_augmented_vel, kin_augmented, &lt;a_s[1], a_s[2], a_s[3]&gt;)):
  local i:=1:local ax:=1: 

  #print(&quot;start&quot;);
  local step_size:=0.2:
  local tot_seconds:=180:
           

  #jerk_seat:=diff(&lt;acc_seat[1],acc_seat[2],acc_seat[3]&gt;,t): ###TOO SLOW
    
  local      w_1 := -1;       #sec_vel_x_h
  local      w_2 := -1.2;     #sec_vel_x_l
  local      w_3 := -1.1;     #sec_vel_z_h
  local      w_4 := -1;       #sec_vel_z_l
  local      w_5 := +1000;     #sec_not_safety
  local      w_6 := 0.0001;   #avg_jerk

  global fun_total := 0:
  local total_jerk:=0:  
  local sec_not_safety:=0:

  local sec_vel_x_h:=0:  #above 40
  local sec_vel_x_l:=0:  #under 40  
  local sec_vel_z_h:=0:  #above 40
  local sec_vel_z_l:=0:  #under 40

  local acc_points := [[seq(evalf(subs(t=x, acc_seat[1])),x=1..tot_seconds, step_size)],[seq(evalf(subs(t=x, acc_seat[2])),x=1..tot_seconds, step_size)],[seq(evalf(subs(t=x, acc_seat[3])),x=1..tot_seconds, step_size)]]:
  local vel_points := [[seq(evalf(subs(t=x, vel_seat[1])),x=1..tot_seconds, step_size)],[seq(evalf(subs(t=x, vel_seat[2])),x=1..tot_seconds, step_size)],[seq(evalf(subs(t=x, vel_seat[3])),x=1..tot_seconds, step_size)]]:

  for ax from 1 to 3 do

    local tmp:=CurveFitting:-Spline( &lt; [seq(i, i=1..tot_seconds,step_size)] &gt; , &lt;simplify(acc_points[ax])&gt; , Timer):
    local d2St_spline := unapply(tmp,[Timer]):
    global jerk_f:=derive_spline(d2St_spline(Timer), Timer, 1):
    local jerk_points := [seq(evalf(jerk_f(Timer)),Timer=1..tot_seconds)]:

    ###Evaluating total jerk ----&gt;ATTENTION, JERK OF THE SEAT, MAYBE FOR DURABILITY IT'S BETTER TO LOOK TO JERK OF THE SINGLE PARTS??
    for i from 1 to nops(jerk_points) do
        total_jerk:=total_jerk+abs(jerk_points[i]):
    end:
    
    ###Evaluating second of acceleration above safety
    local sec_acc_over_h:=0: local sec_acc_over_l:=0: local min_a:=0: local max_a:=0:
    local max_exposure_time:=1.5*(1/step_size):
    if(ax=1) then
         min_a:=-1.5:
         max_a:=5:
    elif(ax=2) then
         min_a:=-2.5:
         max_a:=2.5:
    elif(ax=3) then
         min_a:=-1.5:
         max_a:=5:
    end if:
    for i from 1 to nops(acc_points[ax]) do
        if(acc_points[ax][i]/100&gt;max_a*9.8) then
              sec_acc_over_h:= sec_acc_over_h+1:
           elif(acc_points[ax][i]/100&lt;max_a*9.8 and sec_acc_over_h&gt;-1)then
              if(sec_acc_over_h&gt;max_exposure_time) then
                    sec_not_safety:=sec_not_safety+sec_acc_over_h-max_exposure_time:
              end if:
              sec_acc_over_h:=0
           end if:
           if(acc_points[ax][i]/100&lt;min_a*9.8)then
              sec_acc_over_l:= sec_acc_over_l+1:
           elif(acc_points[ax][i]/100&gt;min_a*9.8 and sec_acc_over_l&gt;-1)then
              if(sec_acc_over_l&gt;max_exposure_time) then
                 sec_not_safety:=sec_not_safety+sec_acc_over_l-max_exposure_time :
              end if:
              sec_acc_over_l:=0
           end if:
    end:

    ###Evaluating second of velocity fun
    if(ax=1) then
         for i from 1 to nops(vel_points[ax]) do
             if(vel_points[ax][i]/100&gt;11.11) then  #11.11m/s=40km/h
                  sec_vel_x_h:=sec_vel_x_h+1:
             end if:
             if(vel_points[ax][i]/100&lt;-11.11) then  #11.11m/s=40km/h
                  sec_vel_x_l:=sec_vel_x_l+1:
             end if:
         end:
    end if:
    if(ax=3) then
         for i from 1 to nops(vel_points[ax]) do
             if(vel_points[ax][i]/100&gt;11.11) then  #11.11m/s=40km/h
                  sec_vel_z_h:=sec_vel_z_h+1:
             end if:
             if(vel_points[ax][i]/100&lt;-11.11) then  #11.11m/s=40km/h
                  sec_vel_z_l:=sec_vel_z_l+1:
             end if:
         end:
    end if:
    
  end:

  fun_total:=w_1*sec_vel_x_h+w_2*sec_vel_x_l+w_3*sec_vel_z_h+w_4*sec_vel_z_l+w_5*sec_not_safety+w_6*total_jerk/(tot_seconds*3):

  if(verbose) then
<Font encoding="UTF-8">    printf(&quot;\134n </Font>sec_vel_x_h: %2f&quot;, sec_vel_x_h/(1/step_size)):
    <Font encoding="UTF-8">printf(&quot;\134n </Font>sec_vel_x_l: %2f&quot;, sec_vel_x_l/(1/step_size)):
    <Font encoding="UTF-8">printf(&quot;\134n </Font>sec_vel_z_h: %2f&quot;, sec_vel_z_h/(1/step_size)):
    <Font encoding="UTF-8">printf(&quot;\134n </Font>sec_vel_z_l: %2f&quot;, sec_vel_z_l/(1/step_size)):
    <Font encoding="UTF-8">printf(&quot;\134n </Font>sec_not_safety: %2f&quot;, sec_not_safety/(1/step_size)):
    <Font encoding="UTF-8">printf(&quot;\134n </Font>Avg jerk: %2f&quot;, total_jerk/(tot_seconds*3)): 
    <Font encoding="UTF-8">printf(&quot;\134n Total fun: %2f&quot;, </Font>fun_total): 
  end if:

  fun_total:
end:</Text-field>
</Input>
</Group>
</Section>
<Group labelreference="L67029" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">FROM MATLAB OPTIMIZATION

sec_vel_x_h:  23  sec_vel_x_l:  13.2  sec_vel_z_h:  3.4  sec_vel_z_l:  0  sec_not_safety:  0  Avg jerk:  7355.8525  FUN_TOTAL:  -212.1644
780th eval, The best individual fitness is -2.121644e+02   
 30  1.324186e+00   2  6.569338e-01   5 </Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L67028" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">data_profiles_2 := {alpha__6 = Pi/4, alpha__s = 30, omega__1 = 2, omega__5 = 0.6569, omega__6 = 5, omega__s = 1.3241}</Text-field>
</Input>
</Group>
<Group labelreference="L67021" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">fun_evaluation(data union data_profiles_2):</Text-field>
</Input>
</Group>
<Group labelreference="L57505" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(CodeGeneration):</Text-field>
</Input>
</Group>
<Group labelreference="L57506" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#Matlab(fun_evaluation)</Text-field>
</Input>
</Group>
<Group labelreference="L57700" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">To export function in matlab without RootOf</Text-field>
</Input>
</Group>
<Group labelreference="L57698" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">kin_augmented_2 := solve(PSI, q_vars,explicit)[2]:  #Check if it's the correct one or the opposite
kin_augmented_vel_2 := [seq( diff(q_vars[i],t) = subs(kin_augmented_2, op(subs_q_vars_vel[i])[2]) ,i=1..Dimension(q_vars_dot))]:
kin_augmented_acc_2 := [seq( diff(q_vars[i],t,t) = subs(kin_augmented_2, op(subs_q_vars_acc[i])[2]) ,i=1..Dimension(q_vars_dot_dot))]:
v_s_matlab := comp_XYZ(project(velocity(PSeat), RFSeat)):
vel_seat_matlab := subs(data, subs(kin_augmented_vel_2, kin_augmented_2, &lt;v_s_matlab[1], v_s_matlab[2], v_s_matlab[3]&gt;)):
  
a_s_matlab := comp_XYZ(project(acceleration(PSeat) + make_VECTOR(RF0, 0, 0, -9.8*100), RFSeat)):
acc_seat_matlab:= subs(data, subs(kin_augmented_acc_2, kin_augmented_vel_2, kin_augmented_2, &lt;a_s_matlab[1], a_s_matlab[2], a_s_matlab[3]&gt;)):</Text-field>
</Input>
</Group>
<Group labelreference="L57523" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#Matlab(vel_seat_matlab)</Text-field>
</Input>
</Group>
<Group labelreference="L57524" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#Matlab(acc_seat_matlab)</Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Montecarlo</Text-field></Title>
<Group labelreference="L57496" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">data</Text-field>
</Input>
</Group>
<Group labelreference="L57500" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Assume a uniform distribution and generate a random set of varibales for the parameter
here range of variation is the same for all parameters, if different I neeed two distributions</Text-field>
</Input>
</Group>
<Group labelreference="L67027" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(Statistics):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L57501" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dist_alpha:= Statistics:-RandomVariable(Uniform(5,30));
dist_omega:= Statistics:-RandomVariable(Uniform(0,2));
dist_omega_6:= Statistics:-RandomVariable(Uniform(0,5));</Text-field>
</Input>
</Group>
<Group labelreference="L57498" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Check the configurations and performs position analysis
<Font opaque="true" background="[255,255,0]">NOTE: every time we run the parameter generation data are different and we get a different mechanims.
As you acan also see not all the configuration are good.
</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L57499" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font opaque="true" background="[255,255,0]" foreground="[128,128,128]">#Randomly generate the data:
#NOTE:ON FAN EVALUATION ADD POSSIBILITY TO REMOVE SAFETY WEIGHT OTHERWISE THE OMEGA THAT GIVE LESS SAFETY IS ALSO THE MORE INFLUENT
<Font encoding="UTF-8">#NOTE:USare valori pi\303\271 strani senn\303\262 c'\303\250 rischio che tutto rimanga a 0
</Font></Font>data_profiles_montecarlo:={alpha__6 = Pi/4, alpha__s = 15, omega__1 = 1, omega__5 = 1, omega__6 = 2.5, omega__s = 1}:
Nsmpl := 10:
alpha__s_UD_set := convert(Statistics[Sample](dist_alpha,Nsmpl),list):
omega__s_UD_set := convert(Statistics[Sample](dist_omega,Nsmpl),list):
omega__1_UD_set := convert(Statistics[Sample](dist_omega,Nsmpl),list):
omega__5_UD_set := convert(Statistics[Sample](dist_omega,Nsmpl),list):
omega__6_UD_set := convert(Statistics[Sample](dist_omega_6,Nsmpl),list):
   
fun_all_as:= []: fun_all_o1:= []:fun_all_o5:= []:fun_all_o6:= []:fun_all_os:= []:
tmp_data:=data union data_profiles_montecarlo:
<Font opaque="true" background="[255,255,0]" foreground="[128,128,128]"># analyse configurations  #L8 - </Font>
for i from 1 to Nsmpl do
  print(i):
   tmp_data_as:=tmp_data minus {alpha__s=15} union {alpha__s=alpha__s_UD_set[i]}:
   tmp_data_o1:=tmp_data minus {omega__s=1} union {omega__s=omega__s_UD_set[i]}:
   tmp_data_o5:=tmp_data minus {omega__1=1} union {omega__1=omega__1_UD_set[i]}:
   tmp_data_o6:=tmp_data minus {omega__5=1} union {omega__5=omega__5_UD_set[i]}:
   tmp_data_os:=tmp_data minus {omega__6=2.5} union {omega__6=omega__6_UD_set[i]}:

   fun_all_as:=[op(fun_all_as),fun_evaluation(tmp_data_as, verbose=false)]: 
   fun_all_o1:=[op(fun_all_o1),fun_evaluation(tmp_data_o1, verbose=false)]: 
   fun_all_o5:=[op(fun_all_o5),fun_evaluation(tmp_data_o5, verbose=false)]: 
   fun_all_o6:=[op(fun_all_o6),fun_evaluation(tmp_data_o6, verbose=false)]: 
   fun_all_os:=[op(fun_all_os),fun_evaluation(tmp_data_os, verbose=false)]:   
end:</Text-field>
</Input>
</Group>
</Section>
<Group hide-input="false" labelreference="L57495" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">std_alpha__s:=StandardDeviation(fun_all_as);
std_omega__1:=StandardDeviation(fun_all_o1);
std_omega__5:=StandardDeviation(fun_all_o5);
std_omega__6:=StandardDeviation(fun_all_o6);
std_omega__s:=StandardDeviation(fun_all_os);</Text-field>
</Input>
</Group>
<Group labelreference="L67206" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">std_alpha__s := 0.00176044505695813
std_omega__1 := 0.000977420386241434
std_omega__5 := 13937.1927683439
std_omega__6 := 634.670170016884
std_omega__s := 17485.4200887781</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L67039" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">&lt;fun_all_as&gt;</Text-field>
</Input>
</Group>
</Section>
<Group labelreference="L63044" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group labelreference="L63035" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 1" layout="Heading 1"><Font size="26">GLOBAL</Font></Text-field>
</Input>
</Group>
<Group labelreference="L62917" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" size="22" layout="Heading 1"><Font size="22">Initial Settings</Font></Text-field></Title>
<Group labelreference="L63039" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">restart:
with(plots):
cc := ColorTools:-GetPalette(&quot;spring&quot;):
plots[setcolors](&quot;spring&quot;):
interface(rtablesize=20):
with(MBSymba_r6):with(LinearAlgebra):</Text-field>
</Input>
</Group>
<Group labelreference="L63090" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">DATA</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63082" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">data := {L1 = 1.5*195-25, L2 = 1.5*266-25, L3 = 1.5*130, L4 = 1.5*59.3, L5 = 1.5*175, L6 = 1.5*207, L7 = 1.5*64.9, L8 = 1.5*64.9, L9 = 120, L10=40, phi1 = -Pi/5, phi2 = Pi/4};</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Kinematics</Font></Text-field></Title>
<Group labelreference="L62960" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" foreground="[192,192,192]" layout="Normal"><Font foreground="[192,192,192]">Base definition (Terra) [Inutile avendo unito Base con Terra]</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62962" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" foreground="[192,192,192]" layout="Normal"><Font foreground="[192,192,192]">R<Font opaque="true">F0  := ground:
P1_0 := origin(RF0):
</Font></Font><Font style="Text">Unit Vectors:</Font><Font opaque="true" foreground="[192,192,192]">
i0   := uvec_X(RF0):
j0   := uvec_Y(RF0):
k0   := uvec_Z(RF0):</Font></Text-field>
</Input>
</Group>
<Group labelreference="L63060" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font opaque="true" bold="true">Body 1 with origin of refe</Font><Font bold="true">rence frame in P1 (Base)</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62967" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF1:= rotate('Z',theta1(t)).rotate('Z',Pi); # Rotation over Pi to use same profiles as Recursive for Numerical Solution
P1 := origin(RF1):
<Font style="Text">Parameters:
</Font>q1 := [theta1(t)]:
<Font style="Text">Unit Vectors:</Font>
i1   := uvec_X(RF1):
j1   := uvec_Y(RF1):
k1   := uvec_Z(RF1):
<Font style="Text">Auxiliary Reference Frame for Body 2</Font>
RF2_1 := RF1.translate(0,0,L1):
P2_1  := origin(RF2_1):
<Font style="Text">Auxiliary Reference Frame for Body 4</Font>
RF4_1 := RF1.translate(0,0,L2):
P4_1  := origin(RF4_1):
</Text-field>
</Input>
</Group>
<Group labelreference="L63079" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 2 with origin of reference frame in P2 (Female)</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62989" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF2 := RF1.translate(x2(t),0,z2(t)).rotate('Y',theta2(t));
P2  := origin(RF2):
<Font style="Text">Parameters:
</Font>q2 := [x2(t),z2(t),theta2(t)]:
<Font style="Text">Unit Vectors:</Font>
i2 := uvec_X(RF2):
j2 := uvec_Y(RF2):
k2 := uvec_Z(RF2):
<Font style="Text">Auxiliary Reference Frame for Prismatic</Font>
RFp_2 := RF2.translate(L3,0,0):
Pp_2  := origin(RFp_2):
</Text-field>
</Input>
</Group>
<Group labelreference="L62988" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 3 with origin of reference frame in P3 (Male)</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63023" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF3 := RF1.translate(x3(t),0,z3(t)).rotate('Y',theta3(t));
P3  := origin(RF3):
<Font style="Text">Parameters:
</Font>q3 := [x3(t),z3(t),theta3(t)]:
<Font style="Text">Unit Vectors:</Font>
i3 := uvec_X(RF3):
j3 := uvec_Y(RF3):
k3 := uvec_Z(RF3):
<Font style="Text">Auxiliary Reference Frame for Prismatic</Font>
RFp_3 := RF3.translate(-L4,0,0):
Pp_3  := origin(RFp_3):
</Text-field>
</Input>
</Group>
<Group labelreference="L63074" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 4 with origin of reference frame in P4 (Arm)</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62971" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF4 := RF1.translate(x4(t),0,z4(t)).rotate('Y',theta4(t));
P4  := origin(RF4):
<Font style="Text">Parameters:
</Font>q4 := [x4(t),z4(t),theta4(t)]:
<Font style="Text">Unit Vectors:</Font>
i4 := uvec_X(RF4):
j4 := uvec_Y(RF4):
k4 := uvec_Z(RF4):
<Font style="Text">Auxiliary Reference Frame for Body 3</Font>
RF3_4  := RF4.translate(L5,0,0):
P3_4   := origin(RF3_4):
<Font style="Text">Auxiliary Reference Frame for Body <Font encoding="UTF-8">5 --phi1 adesso \303\250 positivo</Font>--</Font>
RF5_4  := RF4.translate(L5+L6*cos(-phi1),0,L6*sin(-phi1)):
P5_4   := origin(RF5_4):</Text-field>
</Input>
</Group>
<Group labelreference="L62968" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 5 with origin of reference frame in P5 (Carousel)</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62953" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF5 := RF1.translate(x5(t),0,z5(t)).rotate('Y',theta4__5(t)).rotate('Z',theta5(t)).rotate('Z',Pi); # Rotation over Pi to use same profiles as Recursive for Numerical Solution
P5  := origin(RF5):
<Font style="Text">Parameters:
</Font>q5 := [x5(t),z5(t),theta4__5(t),theta5(t)]:
<Font style="Text">Unit Vectors:</Font>
i5 := uvec_X(RF5):
j5 := uvec_Y(RF5):
k5 := uvec_Z(RF5):

<Font style="Text">Auxiliary Reference Frame for Body 5</Font>
RF6_5 := RF5.translate(L7+L8*cos(phi2),L8*sin(phi2),0).rotate('Z', phi2):
P6_5  := origin(RF6_5):
<Font style="Text">Unit Vectors of auxiliary:</Font>
i6_5 := uvec_X(RF6_5):
j6_5 := uvec_Y(RF6_5):
k6_5 := uvec_Z(RF6_5):</Text-field>
</Input>
</Group>
<Group labelreference="L62949" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Body 6 with origin of reference frame in P6 (Seat)</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62947" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">RF6 := RF1.translate(x6(t),y6(t),z6(t)).rotate('Y',theta6__z(t)).rotate('Z', theta6__x(t)).rotate('Y',theta6__y(t));
P6  := origin(RF6):
<Font style="Text">Parameters:
</Font>q6 := [x6(t),y6(t),z6(t),theta6__x(t),theta6__y(t),theta6__z(t)];
<Font style="Text">Unit Vectors:</Font>
i6 := uvec_X(RF6):
j6 := uvec_Y(RF6):
k6 := uvec_Z(RF6):
<Font style="Text">Auxiliary Reference Frame for Seat</Font>
RFSeat := RF6.translate(L10,0,-L9):
PSeat  := origin(RFSeat):</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Constraint equations</Font></Text-field></Title>
<Group labelreference="L63075" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" foreground="[153,153,153]" layout="Heading 3"><Font foreground="[153,153,153]">Revolute joint in P1 <Font italic="false">[inutile visto che Base e Terra sono unite]</Font></Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63045" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" foreground="[153,153,153]" layout="Normal"><Font foreground="[153,153,153]">Some of the constraint equations are already satisfied</Font></Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" foreground="[153,153,153]" layout="Normal"><Font foreground="[153,153,153]">join_points(P1_0,P1):
[comp_XYZ(%,RF0)]: &lt;%&gt;;</Font></Text-field>
</Input>
<Input><Text-field style="Text" foreground="[153,153,153]" layout="Normal"><Font foreground="[153,153,153]">Parallelism of j1 and j2 --&gt; via Orthogonality of unit vectors</Font></Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font foreground="[153,153,153]">dot_prod(i1,k0);
dot_prod(j1,k0);</Font>
</Text-field>
</Input>
</Group>
<Group labelreference="L63068" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Revolute joint in P2 <Font italic="false">[Base to Female]</Font></Text-field>
</Input>
</Group>
<Group labelreference="L63016" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Some of the constraint equations are already satisfied</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62950" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">join_points(P2, P2_1):
[comp_XYZ(%,RF1)]: &lt;%&gt;;
Phi2 := [%[1], %[3]];</Text-field>
</Input>
<Input><Text-field style="Text" layout="Normal">Parallelism of j1 and j2 --&gt; via Orthogonality of unit unit vectors</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dot_prod(j1, i2);
dot_prod(j1, k2);</Text-field>
</Input>
</Group>
<Group labelreference="L63015" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Revolute joint in P3 <Font italic="false">[Male to Arm]</Font></Text-field>
</Input>
</Group>
<Group labelreference="L63008" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Some of the constraint equations are already satisfied</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63013" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">join_points(P3, P3_4):
[comp_XYZ(%,RF1)]: &lt;%&gt;;
Phi3 := [%[1], %[3]];</Text-field>
</Input>
<Input><Text-field style="Text" layout="Normal">Parallelism of j3 and j4 --&gt; via Orthogonality of unit unit vectors</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dot_prod(j3, i4);
dot_prod(j3, k4);</Text-field>
</Input>
</Group>
<Group labelreference="L63014" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Revolute joint in P4 <Font italic="false">[Base to Arm]</Font></Text-field>
</Input>
</Group>
<Group labelreference="L62966" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Some of the constraint equations are already satisfied</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62943" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">join_points(P4, P4_1):
[comp_XYZ(%,RF1)]: &lt;%&gt;;
Phi4 := [%[1], %[3]];</Text-field>
</Input>
<Input><Text-field style="Text" layout="Normal">Parallelism of j1 and j4 --&gt; via Orthogonality of unit unit vectors</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dot_prod(j1, i4);
dot_prod(j1, k4);</Text-field>
</Input>
</Group>
<Group labelreference="L63064" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Revolute joint in P5 <Font italic="false">[Arm to Carousel]</Font></Text-field>
</Input>
</Group>
<Group labelreference="L63043" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Some of the constraint equations are already satisfied</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63062" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">join_points(P5, P5_4):
[comp_XYZ(%,RF1)]: &lt;%&gt;;
Phi5 := [%[1], %[3]];</Text-field>
</Input>
<Input><Text-field style="Text" layout="Normal">Parallelism of k4 and k5 --&gt; via Orthogonality of unit unit vectors</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#combine(simplify(dot_prod(k4, i5)));#Strano ma funziona
#combine(simplify(dot_prod(k4, j5)));#Strano ma funziona
combine(simplify(dot_prod(i4, k5)));
combine(simplify(dot_prod(j4, k5)));</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63006" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Phi5 := Phi5 union [%%]:</Text-field>
</Input>
</Group>
<Group labelreference="L63046" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Revolute joint in P6 <Font italic="false">[Carousel to Seat]</Font></Text-field>
</Input>
</Group>
<Group labelreference="L63071" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Some of the constraint equations are already satisfied</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63047" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">join_points(P6,P6_5):
[comp_XYZ(%,RF1)]: &lt;%&gt;;
Phi6 := [%[1], %[2], %[3]];</Text-field>
</Input>
<Input><Text-field style="Text" layout="Normal">Parallelism of j5 and j6 --&gt; via Orthogonality of unit unit vectors</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">simplify(dot_prod(i6_5,j6),trig);
simplify(dot_prod(k6_5,j6),trig);</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63010" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Phi6:= Phi6 union [%, %%] :</Text-field>
</Input>
</Group>
<Group labelreference="L62984" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Prismatic joint in Pp <Font italic="false">[Female to Male]</Font></Text-field>
</Input>
</Group>
<Group labelreference="L62981" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Some of the constraint equations are already satisfied</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62973" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">V23 := join_points(Pp_2,Pp_3):
eq_s := simplify(dot_prod(V23,i2))-s(t);
#eval(solve(subs({theta3(t)=-Pi/4, theta2(t)=-Pi/4, x2(t)= 0,z2(t)= 1, x3(t)= 1,z3(t)=2, L4=0, L3=0, s(t)=s}, eq_s))); # s
simplify(dot_prod(V23,j2));
PhiPa := simplify(dot_prod(V23,k2));
</Text-field>
</Input>
</Group>
<Group labelreference="L62990" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">The sliding axis is i2 parallel to i3 --&gt; orthogonality between j2 and k2 to i3 (First Condition)</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62986" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dot_prod(j2,i3);
PhiPb := combine(simplify(dot_prod(k2,i3),trig));</Text-field>
</Input>
</Group>
<Group labelreference="L63004" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 2" layout="Heading 2">Full set of constraint equations</Text-field>
</Input>
</Group>
<Group labelreference="L63077" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Assemble constraint equations</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62992" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">interface(rtablesize = 30)</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62982" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Phi := Phi2 union Phi3 union Phi4 union Phi5 union [PhiPa,PhiPb] union [eq_s] union Phi6: &lt;%&gt;;</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63021" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">q_vars := q1 union q2 union q3 union q4 union q5 union q6 union [s(t)];
qi_vars:=[s(t), theta1(t), theta5(t), theta6__y(t)];
qd_vars := convert(q_vars, set) minus convert(qi_vars, set); 
nq := nops(q_vars);
nc := nops(Phi);
nq-nc=nops(qi_vars);</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62942" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Equations to move from symbol to time dependance and viceversa</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63078" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">q_vars_to_symbol := {seq(q_vars[i] = op(0, q_vars[i]), i = 1 .. nops(q_vars))}:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63032" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">q_vars_to_function := {seq(op(0,lhs(q_vars_to_symbol[i])) =  lhs(q_vars_to_symbol[i]), i = 1 .. nops(q_vars_to_symbol))}:</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62965" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group><Presentation-Block>
<Group view="code" labelreference="L62952" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" foreground="[255,0,0]" layout="Normal"><Font foreground="[255,0,0]">REMARK</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62945" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" foreground="[255,0,0]" layout="Normal"><Font foreground="[255,0,0]">Some constraint equations are linear therefore they can be easily solved to reduce the number of coordinates and constraints.</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62998" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">kin_s := solve(Phi[1..8], {x2(t), z2(t), x3(t), z3(t), x4(t), z4(t), x5(t), z5(t)}): &lt;%&gt;;</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62944" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Phi_simplified_tmp:=simplify(subs(kin_s, Phi)):
Phi_s:=Phi_simplified_tmp[9..-1]:</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" spaceabove="0" linebreak="space" rightmargin="0" linespacing="0.0" initial="0" firstindent="0" leftmargin="0" bulletsuffix="" alignment="left" bullet="none" spacebelow="0" pagebreak-before="false">q_vars_s:=convert(q_vars,set) minus {x2(t), z2(t), x3(t), z3(t), x4(t), z4(t), x5(t), z5(t)}:
qd_vars_s:=convert(qd_vars,set) minus {x2(t), z2(t), x3(t), z3(t), x4(t), z4(t), x5(t), z5(t)}:</Text-field><Text-field prompt="&gt; " style="Maple Input" spaceabove="0" linebreak="space" rightmargin="0" linespacing="0.0" initial="0" firstindent="0" leftmargin="0" bulletsuffix="" alignment="left" bullet="none" spacebelow="0" pagebreak-before="false">nq := nops(q_vars_s);
nc := nops(Phi_s);
nq-nc=nops(qi_vars);</Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Plot Function</Font></Text-field></Title><Presentation-Block>
<Group view="code" labelreference="L63011" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">draw_mech:=proc(sol_kine::{set(`=`)}, data::{set(`=`)}, dof::{set(`=`)},$)<Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2I1EhRictSSdtc3BhY2VHRiQ2Ji8lJ2hlaWdodEdRJjAuMGV4RicvJSZ3aWR0aEdRJjAuMGVtRicvJSZkZXB0aEdGNC8lKmxpbmVicmVha0dRKG5ld2xpbmVGJy1JI21vR0YkNi1RIn5GJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkYvJSlzdHJldGNoeUdGRi8lKnN5bW1ldHJpY0dGRi8lKGxhcmdlb3BHRkYvJS5tb3ZhYmxlbGltaXRzR0ZGLyUnYWNjZW50R0ZGLyUnbHNwYWNlR0Y3LyUncnNwYWNlR0Y3Ri8tRjA2JkYyRjVGOC9GO1ElYXV0b0YnRisvJStleGVjdXRhYmxlR0ZGRkE=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2I1EhRictSSdtc3BhY2VHRiQ2Ji8lJ2hlaWdodEdRJjAuMGV4RicvJSZ3aWR0aEdRJjAuMGVtRicvJSZkZXB0aEdGNC8lKmxpbmVicmVha0dRKG5ld2xpbmVGJy1JI21vR0YkNi1RIn5GJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkYvJSlzdHJldGNoeUdGRi8lKnN5bW1ldHJpY0dGRi8lKGxhcmdlb3BHRkYvJS5tb3ZhYmxlbGltaXRzR0ZGLyUnYWNjZW50R0ZGLyUnbHNwYWNlR0Y3LyUncnNwYWNlR0Y3Ri8tRjA2JkYyRjVGOC9GO1ElYXV0b0YnRisvJStleGVjdXRhYmxlR0ZGRkE=</Equation>local p0,p1, p2, p3, p4, p5, p5_a,p6,pp2,pp3,r,lt,p6_a,p6_b,p_seat, p_seatx,p_seaty,p_seatz:
r:=10:lt:=10:
p0:=subs(sol_kine,data,dof,[comp_XYZ(P1,ground)]):
p1:=subs(sol_kine,data,dof,[comp_XYZ(P1,ground)]):
p2:=subs(sol_kine,data,dof,[comp_XYZ(P2,ground)]):
p3:=subs(sol_kine,data,dof,[comp_XYZ(P3,ground)]):
p4:=subs(sol_kine,data,dof,[comp_XYZ(P4,ground)]):
p5:=subs(sol_kine,data,dof,[comp_XYZ(P5,ground)]):
p5_a:=subs(sol_kine,data,dof,[comp_XYZ(P5+make_VECTOR(RF5, L7,0,0),ground)]):
p6:=subs(sol_kine,data,dof,[comp_XYZ(P6,ground)]):
p6_a:=subs(sol_kine,data,dof,[comp_XYZ(P6+make_VECTOR(RF6, 0,0,-L9),ground)]):
p6_b:=subs(sol_kine,data,dof,[comp_XYZ(P6+make_VECTOR(RF6, 0,0,-L9)+make_VECTOR(RF6, L10,0,0),ground)]):
p_seat:=subs(sol_kine,data,dof,[comp_XYZ(PSeat,ground)]):
pp2:=subs(sol_kine,data,dof,[comp_XYZ(Pp_2,ground)]):
pp3:=subs(sol_kine,data,dof,[comp_XYZ(Pp_3,ground)]):

p_seatx:=subs(sol_kine,data,dof,[comp_XYZ(PSeat+make_VECTOR(RFSeat, 100,0,0),ground)]):
p_seaty:=subs(sol_kine,data,dof,[comp_XYZ(PSeat+make_VECTOR(RFSeat, 0,100,0),ground)]):
p_seatz:=subs(sol_kine,data,dof,[comp_XYZ(PSeat+make_VECTOR(RFSeat, 0,0,100),ground)]):

display(plottools:-sphere(p1,r,color=cc[1]),
plottools:-sphere(p2,r,color=cc[1]),
plottools:-sphere(p3,r,color=cc[1]),
plottools:-sphere(p4,r,color=cc[1]),
plottools:-sphere(p5,r,color=cc[1]),
plottools:-sphere(p5_a,r,color=cc[1]),
plottools:-sphere(p6,r,color=cc[1]),
plottools:-sphere(p6_a,r,color=cc[1]),
plottools:-sphere(p6_b,r,color=cc[1]),
plottools:-sphere(pp2,r,color=cc[1]),
plottools:-sphere(pp3,r,color=cc[1]),
#plottools:-sphere(p_seat,20,color=cc[1]),
plottools:-line(p1,p2,color=&quot;Blue&quot;, thickness=lt),
plottools:-line(p2,p4,color=&quot;Blue&quot;, thickness=lt),
plottools:-line(p2,pp2,color=&quot;Green&quot;, thickness=lt),
plottools:-line(p3,pp3,color=&quot;Blue&quot;, thickness=lt),
plottools:-line(p4,p3,color=&quot;Red&quot;, thickness=lt),
plottools:-line(p3,p5,color=&quot;Red&quot;, thickness=lt),
plottools:-line(p5,p5_a,color=&quot;Orange&quot;, thickness=lt),
plottools:-line(p5_a,p6,color=&quot;Yellow&quot;, thickness=lt),
plottools:-line(p6,p6_a,color=&quot;Blue&quot;, thickness=lt),
plottools:-line(p6_a,p6_b,color=&quot;Blue&quot;, thickness=lt),
plots:-arrow(p0,[100,0,0],color=&quot;Red&quot;, shape=arrow),
plots:-arrow(p0,[0,100,0],color=&quot;Green&quot;, shape=arrow),
plots:-arrow(p0,[0,0,100],color=&quot;Black&quot;, shape=arrow),

plottools:-line(p_seat,p_seatx,color=&quot;Red&quot;, thickness=1),     #x axis of RFSeat
plottools:-line(p_seat,p_seaty,color=&quot;Green&quot;, thickness=1),   #y axis of RFSeat
plottools:-line(p_seat,p_seatz,color=&quot;Black&quot;, thickness=1),   #z axis of RFSeat
scaling=constrained,
axes=boxed
):
end:</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63058" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" bold="true" layout="Normal"><Font bold="false">Plot mechanism for animating</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63022" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">draw_mech_for_animate:=proc(all_sols::list, index, data::{set(`=`)}, dofs::list,$)
local sol_kine, dof:
sol_kine:=subs(q_vars_to_function,all_sols[trunc(index)]):
dof:=subs(q_vars_to_function,dofs[trunc(index)]):
draw_mech(sol_kine,data,dof):
end:</Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" size="22" layout="Heading 1"><Font size="22">Initial position problem - Numerically</Font></Text-field></Title><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L66845" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dof := {s = 0, theta1 = 0, theta5 = 0, theta6__y = 0}: 
sol_kine_all := fsolve(subs(q_vars_to_symbol,data,dof,Phi),subs(q_vars_to_symbol, qd_vars), {theta2 = Pi..2*Pi,theta3 = Pi..2*Pi, theta4=Pi..2*Pi,theta6__x = 0..2*Pi, theta6__z=0..2*Pi}):
%% union %;
evalf(subs(%,subs(data,q_vars_to_symbol,&lt;comp_XYZ(project(origin(RFSeat), RF0))&gt;)))</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L66846" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group hide-input="false" labelreference="L63019" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">draw_mech(subs(q_vars_to_function,sol_kine_all), data, subs(q_vars_to_function,dof));</Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Animation to test Constraints</Font></Text-field></Title><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63018" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dim := 50:
solutions := Array(1..dim,[]):
dofs:= Array(1..dim,[]):</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62987" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">sols := table([theta2 = Array(1 .. dim, []),
 theta3 = Array(1 .. dim, []),
 theta4 = Array(1 .. dim, []), 
 theta4__5 = Array(1 .. dim, []), 
 theta6__x = Array(1 .. dim, []), 
 theta6__z = Array(1 .. dim, []),
 x2 = Array(1 .. dim, []),
 z2 = Array(1 .. dim, []), 
 x3 = Array(1 .. dim, []), 
 z3 = Array(1 .. dim, []), 
 x4 = Array(1 .. dim, []), 
 z4 = Array(1 .. dim, []),  
 x5 = Array(1 .. dim, []), 
 z5 = Array(1 .. dim, []),  
 x6 = Array(1 .. dim, []), 
 y6 = Array(1 .. dim, []),  
 z6 = Array(1 .. dim, [])]):</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63003" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dof := {s = 0, theta1 = 0, theta5 = 0, theta6__y = 0}:
guess:=fsolve(subs(q_vars_to_symbol,data,dof,Phi),subs(q_vars_to_symbol, qd_vars),{theta2 = Pi..2*Pi,theta3 = Pi..2*Pi, theta4=Pi..2*Pi,theta6__x = 0..2*Pi, theta6__z=0..2*Pi}):
%% union %<Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lMGZvbnRfc3R5bGVfbmFtZUdRKDJEfk1hdGhGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62999" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Evaluation of point for animation of the system</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62985" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for i from 1 to dim do
  dofs[i] := {s = (i-1),theta1 = (i-1)*((2*Pi)/dim), theta5 = (-i+1)*((2*Pi)/dim)*3, theta6__y =(i-1)*((2*Pi)/(dim*2))}:  ##&lt;--to see all joint moving
  solutions[i] := fsolve(subs(q_vars_to_symbol,data,dofs[i],Phi), guess);
  guess:=solutions[i];
  
  for j from 1 to 17 do
    sols[lhs(solutions[i][j])][i] := rhs(solutions[i][j]);
  end do:
end do:</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63024" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">display(
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[x2], dim), color = cc[1], legend = x2),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[z2], dim), color = cc[2], legend = z2),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[x3], dim), color = cc[3], legend = x3),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[z3], dim), color = cc[4], legend = z3),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[x4], dim), color = cc[5], legend = x4),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[z4], dim), color = cc[6], legend = z4), 
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[x5], dim), color = cc[5], legend = x5),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[z5], dim), color = cc[6], legend = z5),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[x6], dim), color = cc[5], legend = x6),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[y6], dim), color = cc[6], legend = y6),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[z6], dim), color = cc[5], legend = z6),
#<Font encoding="UTF-8">labels = [typeset(theta__1, &quot;[\302\260]&quot;), tau], 
</Font>#legendstyle = [location = top], 
<Font encoding="UTF-8">title = &quot; Position analysis: position dependent coordinates\134n&quot;);
</Font>display(
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[theta2], dim), color = cc[1], legend = theta2),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[theta3], dim), color = cc[2], legend = theta3),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[theta4], dim), color = cc[3], legend = theta4),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[theta4__5], dim), color = cc[4], legend = theta4__5),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[theta6__x], dim), color = cc[5], legend = theta6__x),
plot(Vector([seq(s, s = 1 .. dim)], dim), Vector(sols[theta6__z], dim), color = cc[6], legend = theta6__z), 
#<Font encoding="UTF-8">labels = [typeset(theta__1, &quot;[\302\260]&quot;), tau], 
</Font>#legendstyle = [location = top], 
<Font encoding="UTF-8">title = &quot; Position analysis: angles dependent coordinates\134n&quot;)</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62936" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Animation</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63017" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">animate(draw_mech_for_animate, [convert(solutions, list), INDEX, data, convert(dofs, list)], INDEX = 1 .. dim)</Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" size="22" layout="Heading 1"><Font size="22">Working space</Font></Text-field></Title><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L62996" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dim_of_s:=10:    dim_of_theta1:=10:
solutions_workingspace := Array(1..dim_of_s*dim_of_theta1,[]):
dofs_workingspace:= Array(1..dim_of_s*dim_of_theta1,[]):
x_seat := Array(1 .. dim_of_s*dim_of_theta1, []):
y_seat := Array(1 .. dim_of_s*dim_of_theta1, []):
z_seat := Array(1 .. dim_of_s*dim_of_theta1, []):
i:=1:
sol_tmp:=1:
for si from 1 to dim_of_s do
  for th1i from 1 to dim_of_theta1 do
    #for th5i from Pi to 2 do
    #for th6i from 0 to 2 do

    dofs_workingspace[i] := {s = si*5, theta1 = th1i*(2*Pi/dim_of_theta1), theta5 = 0, theta6__y =-Pi/2}:  ##Maximum extension
    solutions_workingspace[i] := fsolve(subs(q_vars_to_symbol,data,dofs_workingspace[i],Phi),guess);
    guess:=solutions_workingspace[i];        
    sol_tmp:= simplify(subs(q_vars_to_symbol,data, dofs_workingspace[i],solutions_workingspace[i], &lt;comp_XYZ(PSeat, RF0)&gt;));
    x_seat[i]:=sol_tmp[1];
    y_seat[i]:=sol_tmp[2];
    z_seat[i]:=sol_tmp[3];
    i:=i+1;

    #end do:
    #end do:
  end do:
end do:</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62994" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">XXXX := Vector(convert(x_seat, list)):
YYYY := Vector(convert(y_seat, list)):
ZZZZ := Vector(convert(z_seat, list)):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62997" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Ptriang := plots:-surfdata( &lt;XXXX|YYYY|ZZZZ&gt;, source=irregular ):

plots:-display( Ptriang,
                plots:-pointplot3d(&lt;XXXX|YYYY|ZZZZ&gt;,symbolsize=20,color=red),
                axes=box );</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63072" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">animate(draw_mech_for_animate, [convert(solutions_workingspace, list), INDEX, data, convert(dofs_workingspace, list)], INDEX = 1 .. dim_of_s*dim_of_theta1, frames = dim_of_s*dim_of_theta1/10)</Text-field>
</Input>
</Group></Presentation-Block>
<Group labelreference="L63050" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
</Section>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Velocity Analysis</Font></Text-field></Title><Presentation-Block>
<Group view="code" labelreference="L63087" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Jacobians:</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63083" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">JPhiD := simplify(jacobianF(Phi,qd_vars)):
JPhiI := simplify(jacobianF(Phi,qi_vars)):

Tau := simplify( -LinearAlgebra:-MatrixInverse(JPhiD).JPhiI, trig):
Dimension(Tau);</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group labelreference="L63076" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Velocities of dependent coordinates</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63086" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">qd_vars_dot := Tau.&lt;diff(qi_vars,t)&gt;:</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L62930" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62933" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs_qd_vel := [seq( diff(qd_vars[i],t) = qd_dot[i],i=1..nops(qd_vars))]:</Text-field>
</Input>
</Group>
<Group labelreference="L63053" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Check if Singular configuration in Initial Position</Text-field><Text-field style="Text" layout="Heading 3">Determinant different than 0, so the matrix JPhiD is nonSingular, no Singular configuration of initial position</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62931" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">eq_det := simplify(subs(data,subs(q_vars_to_function,sol_kine_all), subs(q_vars_to_function, dof), (LinearAlgebra:-Determinant(JPhiD))));</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L62925" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63040" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true" foreground="[128,0,0]">Substitution expression</Font> for velocities</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63056" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs_qd_vars_vel := [seq( diff(qd_vars[i],t) = qd_vars_dot[i],i=1..nops(qd_vars))]:</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L63051" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Singular configurations</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63057" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">eq_det := simplify(subs(data,LinearAlgebra:-Determinant(JPhiD))):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L63036" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">We compute <Font bold="true">analytical</Font> singular configurations</Text-field><Text-field style="Text" layout="Normal">Too complex, only analtical but not physical</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63084" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">SCs := solve(subs(data,[op(Phi),eq_det]),q_vars,explicit=true):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L63033" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font size="20" bold="true">Simplified:</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62935" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font size="14" bold="true">Jacobians</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63052" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">JPhiD_s := jacobianF(Phi_s,qd_vars_s): 
JPhiI_s := jacobianF(Phi_s,qi_vars): 

Tau_s := -(simplify( -LinearAlgebra:-MatrixInverse(JPhiD_s).JPhiI_s, trig)):
Dimension(Tau_s);</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group labelreference="L63089" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">Velocities of dependent coordinates</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63085" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">qd_vars_s_dot := Tau_s.&lt;diff(qi_vars,t)&gt;:</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L63042" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true" foreground="[128,0,0]">Substitution expression</Font> for velocities</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63049" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs_qd_vars_s_vel := [seq( diff(qd_vars_s[i],t) = qd_vars_s_dot[i],i=1..nops(qd_vars_s))]: # Add the lhs with the derivatives of qd_vars_s
nops(%);
subs_kin_s_vel := diff(kin_s,t): nops(%); # Differentiate to get velocity of simplified constraints</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L63091" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Singular configurations simplified</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63054" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">eq_det_s := simplify(subs(data,LinearAlgebra:-Determinant(JPhiD_s)));</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63069" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Acceleration Analysis</Font></Text-field></Title>
<Group hide-input="false" labelreference="L62929" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">qd_acc := simplify( map(diff,qd_vars_dot,t),size):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62926" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">AA,res := LinearAlgebra:-GenerateMatrix(convert(qd_acc,list),diff(qi_vars,t,t)):</Text-field>
</Input>
</Group>
<Group labelreference="L62937" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Proof</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62927" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">simplify(AA-Tau):</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font size="22">Rehonomous Constraints (profiles to be updated with new optimization)</Font></Text-field></Title>
<Group labelreference="L62916" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Invece di metter questi profili basterebbe metterci i valori ottenuti numericamente nelle sezioni finali come funzione del tempo</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L65407" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">data_profiles:={  alpha__s = 30, omega__s = Pi/3, omega__1 = 0.1, omega__5 = 0.5, alpha__6 = Pi/4, omega__6 = 0.6};</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L65408" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">s_profile_time := alpha__s - alpha__s*cos(omega__s*t);     
theta1_profile_time := omega__1*t; 
theta5_profile_time := omega__5*t; 
theta6_profile_time := alpha__6*sin(omega__6*t); </Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62908" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">PSI := Phi union 
[s(t) - s_profile_time] union 
[theta1(t) - theta1_profile_time] union 
[theta5(t) - theta5_profile_time] union 
[theta6__y(t) - theta6_profile_time]: &lt;%&gt;;</Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2"><Font size="18">Position</Font></Text-field></Title><Presentation-Block>
<Group view="code" labelreference="L62969" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Set variables to store the position results</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62954" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">steps := 180:
pos_solutions := Array(1..steps,[]):
pos_sols := table([
 s = Array(1 .. steps, []),
 theta1 = Array(1 .. steps, []),
 theta2 = Array(1 .. steps, []),
 theta3 = Array(1 .. steps, []),
 theta4 = Array(1 .. steps, []), 
 theta5 = Array(1 .. steps, []), 
 x2 = Array(1 .. steps, []),
 z2 = Array(1 .. steps, []), 
 x3 = Array(1 .. steps, []), 
 z3 = Array(1 .. steps, []), 
 x4 = Array(1 .. steps, []), 
 z4 = Array(1 .. steps, []),  
 x5 = Array(1 .. steps, []), 
 z5 = Array(1 .. steps, []),  
 x6 = Array(1 .. steps, []), 
 y6 = Array(1 .. steps, []),  
 z6 = Array(1 .. steps, []),
 theta4__5 = Array(1 .. steps, []), 
 theta6__x = Array(1 .. steps, []), 
 theta6__y = Array(1 .. steps, []), 
 theta6__z = Array(1 .. steps, [])]):</Text-field>
</Input>
</Group></Presentation-Block>
<Group labelreference="L63007" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Get the first result of the rehonomous constraints</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62991" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">num_PSI := simplify(evalf(subs(data,data_profiles, q_vars_to_symbol, t = 0, PSI))):
sol := fsolve(num_PSI, convert(subs(q_vars_to_symbol,qd_vars union qi_vars),set), {theta2 = Pi..2*Pi,theta3 = Pi..2*Pi, theta4=Pi..2*Pi,theta6__x = 0..2*Pi, theta6__z=0..2*Pi});</Text-field>
</Input>
</Group>
<Group labelreference="L62948" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Save the first result of the rehonomous constraints</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62983" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">pos_solutions[1] := sol:
for j from 1 to 21 do
    pos_sols[lhs(pos_solutions[1][j])][1] := rhs(pos_solutions[1][j]);
  end do:</Text-field>
</Input>
</Group>
<Group labelreference="L62946" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Iterate and Save the results of the positions of all the steps of the rehonomous constraints</Text-field>
</Input>
</Group><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L62970" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for i from 2 to steps do
  num_PSI := simplify(evalf(subs(data,data_profiles, q_vars_to_symbol, t = i-1, PSI))):
  sol := fsolve(num_PSI, sol);

  pos_solutions[i] := sol;
  
  for j from 1 to 21 do
    pos_sols[lhs(pos_solutions[i][j])][i] := rhs(pos_solutions[i][j]);
  end do:
end do:</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62951" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Display the results of the rehonomous constraints</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62964" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">display(
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[s], steps), color = cc[12], legend = s),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[x2], steps), color = cc[1], legend = x2),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[z2], steps), color = cc[2], legend = z2),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[x3], steps), color = cc[3], legend = x3),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[z3], steps), color = cc[4], legend = z3),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[x4], steps), color = cc[5], legend = x4),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[z4], steps), color = cc[6], legend = z4), 
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[x5], steps), color = cc[7], legend = x5),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[z5], steps), color = cc[8], legend = z5),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[x6], steps), color = cc[9], legend = x6),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[y6], steps), color = cc[10], legend = y6),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[z6], steps), color = cc[11], legend = z6),
<Font encoding="UTF-8">title = &quot; Position analysis: position dependent coordinates\134n&quot;);
</Font>
display(
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[theta1]* 180/Pi , steps), color = cc[1], legend = theta1),
plot(Vector([seq(s, s = 1 .. steps)], steps), Vector(pos_sols[theta2]* 180/Pi , steps), color = cc[2], legend = theta2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(pos_sols[theta3]* 180/Pi , steps), color = cc[3], legend = theta3),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(pos_sols[theta4]* 180/Pi , steps), color = cc[4], legend = theta4),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(pos_sols[theta4__5]* 180/Pi , steps), color = cc[5], legend = theta4__5),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(pos_sols[theta5]* 180/Pi , steps), color = cc[6], legend = theta5),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(pos_sols[theta6__x]* 180/Pi , steps), color = cc[7], legend = theta6__x),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(pos_sols[theta6__y]* 180/Pi , steps), color = cc[8], legend = theta6__y),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(pos_sols[theta6__z]* 180/Pi , steps), color = cc[9], legend = theta6__z), 
<Font encoding="UTF-8">title = &quot; Position analysis: angles dependent coordinates\134n&quot;)</Font></Text-field>
</Input>
</Group></Presentation-Block>
<Group labelreference="L62918" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Animate the results</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62920" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">animate(draw_mech_for_animate, [convert(pos_solutions, list), INDEX, data, convert(pos_solutions, list)], INDEX = 1 .. 180, frames=36)</Text-field>
</Input>
</Group>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2"><Font size="18">Velocity</Font></Text-field></Title>
<Group labelreference="L63037" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Augmented Jacobian</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63092" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Aug_Jac := jacobianF(PSI, qd_vars union qi_vars):</Text-field>
</Input>
</Group>
<Group labelreference="L63048" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Proof that the Constraints are not redundant</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L63088" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Rank(subs(data,Aug_Jac)) = Dimension(subs(data,Aug_Jac)): # 21 = 21
solve(Determinant(subs(data,Aug_Jac))): #Aug_Jac in Not Singular</Text-field>
</Input>
</Group><Presentation-Block>
<Group view="code" labelreference="L62955" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Derivation of the Augmented constraint equation</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63080" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">PSI__dot := down_order(diff(PSI,t),q_vars,t);</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63081" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Set variables to store the velocity results</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62995" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">steps := 180:
vel_solutions := Array(1..steps,[]):
vel_sols := table([
 s__dot = Array(1 .. steps, []),
 theta1__dot = Array(1 .. steps, []),
 theta2__dot = Array(1 .. steps, []),
 theta3__dot = Array(1 .. steps, []),
 theta4__dot = Array(1 .. steps, []), 
 theta5__dot = Array(1 .. steps, []), 
 x2__dot = Array(1 .. steps, []),
 z2__dot = Array(1 .. steps, []), 
 x3__dot = Array(1 .. steps, []), 
 z3__dot = Array(1 .. steps, []), 
 x4__dot = Array(1 .. steps, []), 
 z4__dot = Array(1 .. steps, []),  
 x5__dot = Array(1 .. steps, []), 
 z5__dot = Array(1 .. steps, []),  
 x6__dot = Array(1 .. steps, []), 
 y6__dot = Array(1 .. steps, []),  
 z6__dot = Array(1 .. steps, []),
 theta4__5__dot = Array(1 .. steps, []), 
 theta6__x__dot = Array(1 .. steps, []), 
 theta6__y__dot = Array(1 .. steps, []), 
 theta6__z__dot = Array(1 .. steps, [])]):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63012" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L63009" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dot_function := down_order(diff(qd_vars union qi_vars,t),qd_vars union qi_vars,t):
dot_symbol := [theta2__dot, theta3__dot, theta4__dot, x2__dot, x3__dot, x4__dot, x5__dot, x6__dot, y6__dot, z2__dot, z3__dot, z4__dot, z5__dot, z6__dot, theta4__5__dot, theta6__x__dot, theta6__z__dot, s__dot, theta1__dot, theta5__dot, theta6__y__dot]:
q_vars_dot_to_symbol := [seq( dot_function[j] = dot_symbol[j],j=1..nops(qd_vars union qi_vars))];</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63066" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62928" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for i from 1 to steps do
  PSI__dot__num := evalf(subs(data, data_profiles,q_vars_dot_to_symbol,q_vars_to_symbol, pos_solutions[i],PSI__dot)):
  Aug_Jac_Num := evalf(subs(q_vars_dot_to_symbol,q_vars_to_symbol,data, data_profiles, pos_solutions[i], Aug_Jac)):
  q_vars_dot_num := -MatrixInverse(Aug_Jac_Num).&lt;PSI__dot__num&gt;:
  subs_q_vars_vel_sol := solve(convert(q_vars_dot_num,list),dot_symbol):
  subs_q_vars_vel_sol_num := evalf(subs(t=i-1,subs_q_vars_vel_sol)):

  vel_solutions[i] := op(subs_q_vars_vel_sol_num):

  for j from 1 to 21 do
    vel_sols[lhs(vel_solutions[i][j])][i] := rhs(vel_solutions[i][j]);
  end do:
end do:</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L63001" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Display the results of the rehonomous constraints</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63000" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">display(
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[s__dot], steps), color = cc[12], legend = s__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[x2__dot], steps), color = cc[1], legend = x2__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[z2__dot], steps), color = cc[2], legend = z2__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[x3__dot], steps), color = cc[3], legend = x3__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[z3__dot], steps), color = cc[4], legend = z3__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[x4__dot], steps), color = cc[5], legend = x4__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[z4__dot], steps), color = cc[6], legend = z4__dot), 
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[x5__dot], steps), color = cc[7], legend = x5__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[z5__dot], steps), color = cc[8], legend = z5__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[x6__dot], steps), color = cc[9], legend = x6__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[y6__dot], steps), color = cc[10], legend = y6__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[z6__dot], steps), color = cc[11], legend = z6__dot),
title = &quot; Velocity<Font encoding="UTF-8"> analysis: position dependent coordinates\134n&quot;);
</Font>
display(
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[theta1__dot]* 180/Pi , steps), color = cc[1], legend = theta1__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[theta2__dot]* 180/Pi , steps), color = cc[2], legend = theta2__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[theta3__dot]* 180/Pi , steps), color = cc[3], legend = theta3__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[theta4__dot]* 180/Pi , steps), color = cc[4], legend = theta4__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[theta4__5__dot]* 180/Pi , steps), color = cc[5], legend = theta4__5__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[theta5__dot]* 180/Pi , steps), color = cc[6], legend = theta5__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[theta6__x__dot]* 180/Pi , steps), color = cc[7], legend = theta6__x__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[theta6__y__dot]* 180/Pi , steps), color = cc[8], legend = theta6__y__dot),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(vel_sols[theta6__z__dot]* 180/Pi , steps), color = cc[9], legend = theta6__z__dot), 
<Font encoding="UTF-8">title = &quot; Velocity analysis: angles dependent coordinates\134n&quot;)</Font></Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2"><Font size="18">Acceleration</Font></Text-field></Title><Presentation-Block>
<Group view="code" labelreference="L62980" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Derivation of the Augmented Jacobian</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62978" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Aug_Jac_dot := down_order(diff(Aug_Jac, t), q_vars, t):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62979" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Second derivation of the Augmented constraint equation</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62975" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">PSI__dot2 := down_order(down_order(diff(PSI__dot,t),q_vars,t),dot_function,t):</Text-field>
</Input>
</Group></Presentation-Block>
<Group labelreference="L63055" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group><Presentation-Block>
<Group view="code" labelreference="L62921" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Set variables to store the velocity results</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62922" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">steps := 180:
acc_solutions := Array(1..steps,[]):
acc_sols := table([
 s__dot2 = Array(1 .. steps, []),
 theta1__dot2 = Array(1 .. steps, []),
 theta2__dot2 = Array(1 .. steps, []),
 theta3__dot2 = Array(1 .. steps, []),
 theta4__dot2 = Array(1 .. steps, []), 
 theta5__dot2 = Array(1 .. steps, []), 
 x2__dot2 = Array(1 .. steps, []),
 z2__dot2 = Array(1 .. steps, []), 
 x3__dot2 = Array(1 .. steps, []), 
 z3__dot2 = Array(1 .. steps, []), 
 x4__dot2 = Array(1 .. steps, []), 
 z4__dot2 = Array(1 .. steps, []),  
 x5__dot2 = Array(1 .. steps, []), 
 z5__dot2 = Array(1 .. steps, []),  
 x6__dot2 = Array(1 .. steps, []), 
 y6__dot2 = Array(1 .. steps, []),  
 z6__dot2 = Array(1 .. steps, []),
 theta4__5__dot2 = Array(1 .. steps, []), 
 theta6__x__dot2 = Array(1 .. steps, []), 
 theta6__y__dot2 = Array(1 .. steps, []), 
 theta6__z__dot2 = Array(1 .. steps, [])]):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62976" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62912" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dot2_function := down_order(diff(dot_function,t),dot_function,t);
dot2_symbol := [theta2__dot2, theta3__dot2, theta4__dot2, x2__dot2, x3__dot2, x4__dot2, x5__dot2, x6__dot2, y6__dot2, z2__dot2, z3__dot2, z4__dot2, z5__dot2, z6__dot2, theta4__5__dot2, theta6__x__dot2, theta6__z__dot2, s__dot2, theta1__dot2, theta5__dot2, theta6__y__dot2]:
q_vars_dot2_to_symbol := [seq( dot2_function[j] = dot2_symbol[j],j=1..nops(qd_vars union qi_vars))];</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62958" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L62913" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for i from 1 to steps do
  Aug_Jac_Num := evalf(subs(q_vars_dot_to_symbol,q_vars_to_symbol,data, data_profiles, pos_solutions[i], Aug_Jac)):
  Aug_Jac_dot_Num := evalf(subs(q_vars_dot_to_symbol,q_vars_to_symbol,data, data_profiles,vel_solutions[i], pos_solutions[i], Aug_Jac_dot)):
  PSI__dot2__num := evalf(subs(data, data_profiles,q_vars_dot2_to_symbol,q_vars_dot_to_symbol,q_vars_to_symbol,vel_solutions[i], pos_solutions[i],PSI__dot2)):
  q_vars_dot_num := [seq( rhs(vel_solutions[1][j]),j=1..nops(vel_solutions[1]))];
  q_vars_dot2_num := -MatrixInverse(Aug_Jac_Num).(Aug_Jac_dot_Num.&lt;q_vars_dot_num&gt; + &lt;PSI__dot2__num&gt;);
  subs_q_vars_acc_sol := solve(convert(q_vars_dot2_num,list),dot2_symbol);
  subs_q_vars_acc_sol_num := evalf(subs(t=i-1,subs_q_vars_acc_sol));

  acc_solutions[i] := op(subs_q_vars_acc_sol_num):

  for j from 1 to 21 do
    acc_sols[lhs(acc_solutions[i][j])][i] := rhs(acc_solutions[i][j]);
  end do:
end do:</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L62924" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Display the results of the rehonomous constraints</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62923" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">display(
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[s__dot2], steps), color = cc[12], legend = s__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[x2__dot2], steps), color = cc[1], legend = x2__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[z2__dot2], steps), color = cc[2], legend = z2__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[x3__dot2], steps), color = cc[3], legend = x3__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[z3__dot2], steps), color = cc[4], legend = z3__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[x4__dot2], steps), color = cc[5], legend = x4__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[z4__dot2], steps), color = cc[6], legend = z4__dot2), 
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[x5__dot2], steps), color = cc[7], legend = x5__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[z5__dot2], steps), color = cc[8], legend = z5__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[x6__dot2], steps), color = cc[9], legend = x6__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[y6__dot2], steps), color = cc[10], legend = y6__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[z6__dot2], steps), color = cc[11], legend = z6__dot2),
title = &quot; Acceleration<Font encoding="UTF-8"> analysis: position dependent coordinates\134n&quot;);
</Font>
display(
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[theta1__dot2]* 180/Pi , steps), color = cc[1], legend = theta1__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[theta2__dot2]* 180/Pi , steps), color = cc[2], legend = theta2__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[theta3__dot2]* 180/Pi , steps), color = cc[3], legend = theta3__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[theta4__dot2]* 180/Pi , steps), color = cc[4], legend = theta4__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[theta4__5__dot2]* 180/Pi , steps), color = cc[5], legend = theta4__5__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[theta5__dot2]* 180/Pi , steps), color = cc[6], legend = theta5__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[theta6__x__dot2]* 180/Pi , steps), color = cc[7], legend = theta6__x__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[theta6__y__dot2]* 180/Pi , steps), color = cc[8], legend = theta6__y__dot2),
plot(Vector([seq(step, step =  1 .. steps)], steps), Vector(acc_sols[theta6__z__dot2]* 180/Pi , steps), color = cc[9], legend = theta6__z__dot2), 
<Font encoding="UTF-8">title = &quot; Acceleration analysis: angles dependent coordinates\134n&quot;)</Font></Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2"><Font size="18">Jerk (using splines)</Font></Text-field></Title><Presentation-Block>
<Group view="code" labelreference="L62939" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 3" layout="Heading 3">Alternative option: create a spline of the discrete solution as function of time</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62938" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Derivative of these are jerks but are approximations due to acceleration analysis discretisation</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63025" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[s__dot2],list),T):
s__dot2_spline := unapply(%,[T]):
s__dot3_spline := diff(s__dot2_spline(T),T):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63026" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[theta1__dot2],list),T):
theta1__dot2_spline := unapply(%,[T]):
theta1__dot3_spline := diff(theta1__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63027" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[theta2__dot2],list),T):
theta2__dot2_spline := unapply(%,[T]):
theta2__dot3_spline := diff(theta2__dot2_spline(T),T):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63028" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[theta3__dot2],list),T):
theta3__dot2_spline := unapply(%,[T]):
theta3__dot3_spline := diff(theta3__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63029" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[theta4__dot2],list),T):
theta4__dot2_spline := unapply(%,[T]):
theta4__dot3_spline := diff(theta4__dot2_spline(T),T):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63030" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[theta5__dot2],list),T):
theta5__dot2_spline := unapply(%,[T]):
theta5__dot3_spline := diff(theta5__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63031" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[x2__dot2],list),T):
x2__dot2_spline := unapply(%,[T]):
x2__dot3_spline := diff(x2__dot2_spline(T),T):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63034" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[z2__dot2],list),T):
z2__dot2_spline := unapply(%,[T]):
z2__dot3_spline := diff(z2__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63038" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[x3__dot2],list),T):
x3__dot2_spline := unapply(%,[T]):
x3__dot3_spline := diff(x3__dot2_spline(T),T):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63041" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[z3__dot2],list),T):
z3__dot2_spline := unapply(%,[T]):
z3__dot3_spline := diff(z3__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63059" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[x4__dot2],list),T):
x4__dot2_spline := unapply(%,[T]):
x4__dot3_spline := diff(x4__dot2_spline(T),T):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63061" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[z4__dot2],list),T):
z4__dot2_spline := unapply(%,[T]):
z4__dot3_spline := diff(z4__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63063" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[x5__dot2],list),T):
x5__dot2_spline := unapply(%,[T]):
x5__dot3_spline := diff(x5__dot2_spline(T),T):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63065" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[z5__dot2],list),T):
z5__dot2_spline := unapply(%,[T]):
z5__dot3_spline := diff(z5__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63067" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[x6__dot2],list),T):
x6__dot2_spline := unapply(%,[T]):
x6__dot3_spline := diff(x6__dot2_spline(T),T):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L63070" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[y6__dot2],list),T):
y6__dot2_spline := unapply(%,[T]):
y6__dot3_spline := diff(y6__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L63073" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[z6__dot2],list),T):
z6__dot2_spline := unapply(%,[T]):
z6__dot3_spline := diff(z6__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L62972" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[theta4__5__dot2],list),T):
theta4__5__dot2_spline := unapply(%,[T]):
theta4__5__dot3_spline := diff(theta4__5__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L62974" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[theta6__x__dot2],list),T):
theta6__x__dot2_spline := unapply(%,[T]):
theta6__x__dot3_spline := diff(theta6__x__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L62977" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[theta6__y__dot2],list),T):
theta6__y__dot2_spline := unapply(%,[T]):
theta6__y__dot3_spline := diff(theta6__y__dot2_spline(T),T):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L62932" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">CurveFitting:-Spline([seq(step, step =  1 .. steps)], convert(acc_sols[theta6__z__dot2],list),T):
theta6__z__dot2_spline := unapply(%,[T]):
theta6__z__dot3_spline := diff(theta6__z__dot2_spline(T),T):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62934" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L63005" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Display the results of the rehonomous constraints</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L62993" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">display(
plot(s__dot3_spline(T), T=0..steps, color = cc[12], legend = s__dot3),
plot(x2__dot3_spline(T), T=0..steps, color = cc[1], legend = x2__dot3),
plot(z2__dot3_spline(T), T=0..steps, color = cc[2], legend = z2__dot3),
plot(x3__dot3_spline(T), T=0..steps, color = cc[3], legend = x3__dot3),
plot(z3__dot3_spline(T), T=0..steps, color = cc[4], legend = z3__dot3),
plot(x4__dot3_spline(T), T=0..steps, color = cc[5], legend = x4__dot3),
plot(z4__dot3_spline(T), T=0..steps, color = cc[6], legend = z4__dot3), 
plot(x5__dot3_spline(T), T=0..steps, color = cc[7], legend = x5__dot3),
plot(z5__dot3_spline(T), T=0..steps, color = cc[8], legend = z5__dot3),
plot(x6__dot3_spline(T), T=0..steps, color = cc[9], legend = x6__dot3),
plot(y6__dot3_spline(T), T=0..steps, color = cc[10], legend = y6__dot3),
plot(z6__dot3_spline(T), T=0..steps, color = cc[11], legend = z6__dot3),
title = &quot; Jerk<Font encoding="UTF-8"> analysis: position dependent coordinates\134n&quot;);
</Font>
display(
plot(theta1__dot3_spline(T)*180/Pi, T=0..steps, color = cc[1], legend = theta1__dot3),
plot(theta2__dot3_spline(T)* 180/Pi, T=0..steps, color = cc[2], legend = theta2__dot3),
plot(theta3__dot3_spline(T)* 180/Pi, T=0..steps, color = cc[3], legend = theta3__dot3),
plot(theta4__dot3_spline(T)* 180/Pi, T=0..steps, color = cc[4], legend = theta4__dot3),
plot(theta4__5__dot3_spline(T)* 180/Pi, T=0..steps, color = cc[5], legend = theta4__5__dot3),
plot(theta5__dot3_spline(T)* 180/Pi, T=0..steps, color = cc[6], legend = theta5__dot3),
plot(theta6__x__dot3_spline(T)* 180/Pi, T=0..steps, color = cc[7], legend = theta6__x__dot3),
plot(theta6__y__dot3_spline(T)* 180/Pi, T=0..steps, color = cc[8], legend = theta6__y__dot3),
plot(theta6__z__dot3_spline(T)* 180/Pi, T=0..steps, color = cc[9], legend = theta6__z__dot3), 
<Font encoding="UTF-8">title = &quot; Jerk analysis: angles dependent coordinates\134n&quot;)</Font></Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Seat Profile</Text-field></Title>
<Group hide-input="false" labelreference="L62914" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Seat_ground := comp_XYZ(project(origin(RFSeat), RF0));
Seat := comp_XYZ(project(origin(RFSeat), RFSeat)): &lt;%&gt;;</Text-field>
</Input>
</Group>
<Group labelreference="L62959" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">POSITION  wrt ground</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62956" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">seat_profile_ground := Vector( [ seq( [ subs( data,
{theta1(t) = pos_sols[theta1][x+1]},  
{theta2(t) = pos_sols[theta2][x+1]},  
{theta3(t) = pos_sols[theta3][x+1]},  
{theta4(t) = pos_sols[theta4][x+1]},  
{theta5(t) = pos_sols[theta5][x+1]},  
{x2(t) = pos_sols[x2][x+1]},  
{z2(t) = pos_sols[z2][x+1]},  
{x3(t) = pos_sols[x3][x+1]},  
{z3(t) = pos_sols[z3][x+1]},  
{x4(t) = pos_sols[x4][x+1]},  
{z4(t) = pos_sols[z4][x+1]},  
{x5(t) = pos_sols[x5][x+1]},  
{z5(t) = pos_sols[z5][x+1]},  
{x6(t) = pos_sols[x6][x+1]},  
{y6(t) = pos_sols[y6][x+1]},  
{z6(t) = pos_sols[z6][x+1]},  
{theta4__5(t) = pos_sols[theta4__5][x+1]},  
{theta6__x(t) = pos_sols[theta6__x][x+1]},  
{theta6__y(t) = pos_sols[theta6__y][x+1]}, 
{theta6__z(t) = pos_sols[theta6__z][x+1]},  
[Seat_ground]) ] , x=0..steps-1) ] ):
display( 
plot(   [  seq(  [  i  ,  seat_profile_ground[i][1]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_ground)  )  ] ,color=cc[1],legend=typeset(x) ),
plot(   [  seq(  [  i  ,  seat_profile_ground[i][2]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_ground)  )  ] ,color=cc[2],legend=typeset(y) ), 
plot(   [  seq(  [  i  ,  seat_profile_ground[i][3]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_ground)  )  ] ,color=cc[3],legend=typeset(z) ), 
         labels = [typeset(t,&quot;[s]&quot;),typeset(pos,&quot;[m]&quot;)],
         title = &quot; Position &quot;);</Text-field>
</Input>
</Group>
<Group labelreference="L62941" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font bold="true">VELOCITY</Font></Text-field>
</Input>
</Group>
<Group labelreference="L62957" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">_seat_profile_vel_ground := diff(Seat_ground[1], t), diff(Seat_ground[2], t), diff(Seat_ground[3], t): # Projected to ground
_seat_profile_vel := comp_XYZ(project(velocity(origin(RFSeat)), RFSeat)): # Projected to Seat</Text-field>
</Input>
</Group>
<Group labelreference="L65214" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">seat_profile_vel := Vector( [ seq( [ subs( data,
{diff(theta1(t),t) = vel_sols[theta1__dot][x+1]},  
{diff(theta2(t),t) = vel_sols[theta2__dot][x+1]},  
{diff(theta3(t),t) = vel_sols[theta3__dot][x+1]},  
{diff(theta4(t),t) = vel_sols[theta4__dot][x+1]},  
{diff(theta5(t),t) = vel_sols[theta5__dot][x+1]},  
{diff(x2(t),t) = vel_sols[x2__dot][x+1]},  
{diff(z2(t),t) = vel_sols[z2__dot][x+1]},  
{diff(x3(t),t) = vel_sols[x3__dot][x+1]},  
{diff(z3(t),t) = vel_sols[z3__dot][x+1]},  
{diff(x4(t),t) = vel_sols[x4__dot][x+1]},  
{diff(z4(t),t) = vel_sols[z4__dot][x+1]},  
{diff(x5(t),t) = vel_sols[x5__dot][x+1]},  
{diff(z5(t),t) = vel_sols[z5__dot][x+1]},  
{diff(x6(t),t) = vel_sols[x6__dot][x+1]},  
{diff(y6(t),t) = vel_sols[y6__dot][x+1]},  
{diff(z6(t),t) = vel_sols[z6__dot][x+1]},  
{diff(theta4__5(t),t) = vel_sols[theta4__5__dot][x+1]},  
{diff(theta6__x(t),t) = vel_sols[theta6__x__dot][x+1]},  
{diff(theta6__y(t),t) = vel_sols[theta6__y__dot][x+1]}, 
{diff(theta6__z(t),t) = vel_sols[theta6__z__dot][x+1]},  
{theta1(t) = pos_sols[theta1][x+1]},  
{theta2(t) = pos_sols[theta2][x+1]},  
{theta3(t) = pos_sols[theta3][x+1]},  
{theta4(t) = pos_sols[theta4][x+1]},  
{theta5(t) = pos_sols[theta5][x+1]},  
{x2(t) = pos_sols[x2][x+1]},  
{z2(t) = pos_sols[z2][x+1]},  
{x3(t) = pos_sols[x3][x+1]},  
{z3(t) = pos_sols[z3][x+1]},  
{x4(t) = pos_sols[x4][x+1]},  
{z4(t) = pos_sols[z4][x+1]},  
{x5(t) = pos_sols[x5][x+1]},  
{z5(t) = pos_sols[z5][x+1]},  
{x6(t) = pos_sols[x6][x+1]},  
{y6(t) = pos_sols[y6][x+1]},  
{z6(t) = pos_sols[z6][x+1]},  
{theta4__5(t) = pos_sols[theta4__5][x+1]},  
{theta6__x(t) = pos_sols[theta6__x][x+1]},  
{theta6__y(t) = pos_sols[theta6__y][x+1]}, 
{theta6__z(t) = pos_sols[theta6__z][x+1]},  
[_seat_profile_vel]) ] , x=0..steps-1) ] ):
display( 
plot(   [  seq(  [  i  ,  seat_profile_vel[i][1]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_vel)  )  ] ,color=cc[1],legend=typeset(x__dot) ),
plot(   [  seq(  [  i  ,  seat_profile_vel[i][2]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_vel)  )  ] ,color=cc[2],legend=typeset(y__dot) ), 
plot(   [  seq(  [  i  ,  seat_profile_vel[i][3]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_vel)  )  ] ,color=cc[3],legend=typeset(z__dot) ), 
         labels = [typeset(t,&quot;[s]&quot;),typeset(vel,&quot;[m/s]&quot;)],
         title = &quot; Velocity &quot;);</Text-field>
</Input>
</Group>
<Group labelreference="L62961" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" bold="true" layout="Normal"><Font bold="true">ACCELERATION</Font></Text-field>
</Input>
</Group>
<Group labelreference="L62940" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">_seat_profile_acc_ground := diff(_seat_profile_vel_ground[1], t), diff(_seat_profile_vel_ground[2], t), diff(_seat_profile_vel_ground[3], t): # Projected to ground
_seat_profile_acc := comp_XYZ(project(acceleration(origin(RFSeat)), RFSeat)): # Projected to Seat</Text-field>
</Input>
</Group>
<Group labelreference="L65250" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">seat_profile_acc := Vector( [ seq( [ subs( data,
{diff(diff(theta1(t),t),t) = acc_sols[theta1__dot2][x+1]},  
{diff(diff(theta2(t),t),t) = acc_sols[theta2__dot2][x+1]},  
{diff(diff(theta3(t),t),t) = acc_sols[theta3__dot2][x+1]},  
{diff(diff(theta4(t),t),t) = acc_sols[theta4__dot2][x+1]},  
{diff(diff(theta5(t),t),t) = acc_sols[theta5__dot2][x+1]},  
{diff(diff(x2(t),t),t) = acc_sols[x2__dot2][x+1]},  
{diff(diff(z2(t),t),t) = acc_sols[z2__dot2][x+1]},  
{diff(diff(x3(t),t),t) = acc_sols[x3__dot2][x+1]},  
{diff(diff(z3(t),t),t) = acc_sols[z3__dot2][x+1]},  
{diff(diff(x4(t),t),t) = acc_sols[x4__dot2][x+1]},  
{diff(diff(z4(t),t),t) = acc_sols[z4__dot2][x+1]},  
{diff(diff(x5(t),t),t) = acc_sols[x5__dot2][x+1]},  
{diff(diff(z5(t),t),t) = acc_sols[z5__dot2][x+1]},  
{diff(diff(x6(t),t),t) = acc_sols[x6__dot2][x+1]},  
{diff(diff(y6(t),t),t) = acc_sols[y6__dot2][x+1]},  
{diff(diff(z6(t),t),t) = acc_sols[z6__dot2][x+1]},  
{diff(diff(theta4__5(t),t),t) = acc_sols[theta4__5__dot2][x+1]},  
{diff(diff(theta6__x(t),t),t) = acc_sols[theta6__x__dot2][x+1]},  
{diff(diff(theta6__y(t),t),t) = acc_sols[theta6__y__dot2][x+1]}, 
{diff(diff(theta6__z(t),t),t) = acc_sols[theta6__z__dot2][x+1]},  
{diff(theta1(t),t) = vel_sols[theta1__dot][x+1]},  
{diff(theta2(t),t) = vel_sols[theta2__dot][x+1]},  
{diff(theta3(t),t) = vel_sols[theta3__dot][x+1]},  
{diff(theta4(t),t) = vel_sols[theta4__dot][x+1]},  
{diff(theta5(t),t) = vel_sols[theta5__dot][x+1]},  
{diff(x2(t),t) = vel_sols[x2__dot][x+1]},  
{diff(z2(t),t) = vel_sols[z2__dot][x+1]},  
{diff(x3(t),t) = vel_sols[x3__dot][x+1]},  
{diff(z3(t),t) = vel_sols[z3__dot][x+1]},  
{diff(x4(t),t) = vel_sols[x4__dot][x+1]},  
{diff(z4(t),t) = vel_sols[z4__dot][x+1]},  
{diff(x5(t),t) = vel_sols[x5__dot][x+1]},  
{diff(z5(t),t) = vel_sols[z5__dot][x+1]},  
{diff(x6(t),t) = vel_sols[x6__dot][x+1]},  
{diff(y6(t),t) = vel_sols[y6__dot][x+1]},  
{diff(z6(t),t) = vel_sols[z6__dot][x+1]},  
{diff(theta4__5(t),t) = vel_sols[theta4__5__dot][x+1]},  
{diff(theta6__x(t),t) = vel_sols[theta6__x__dot][x+1]},  
{diff(theta6__y(t),t) = vel_sols[theta6__y__dot][x+1]}, 
{diff(theta6__z(t),t) = vel_sols[theta6__z__dot][x+1]},  
{theta1(t) = pos_sols[theta1][x+1]},  
{theta2(t) = pos_sols[theta2][x+1]},  
{theta3(t) = pos_sols[theta3][x+1]},  
{theta4(t) = pos_sols[theta4][x+1]},  
{theta5(t) = pos_sols[theta5][x+1]},  
{x2(t) = pos_sols[x2][x+1]},  
{z2(t) = pos_sols[z2][x+1]},  
{x3(t) = pos_sols[x3][x+1]},  
{z3(t) = pos_sols[z3][x+1]},  
{x4(t) = pos_sols[x4][x+1]},  
{z4(t) = pos_sols[z4][x+1]},  
{x5(t) = pos_sols[x5][x+1]},  
{z5(t) = pos_sols[z5][x+1]},  
{x6(t) = pos_sols[x6][x+1]},  
{y6(t) = pos_sols[y6][x+1]},  
{z6(t) = pos_sols[z6][x+1]},  
{theta4__5(t) = pos_sols[theta4__5][x+1]},  
{theta6__x(t) = pos_sols[theta6__x][x+1]},  
{theta6__y(t) = pos_sols[theta6__y][x+1]}, 
{theta6__z(t) = pos_sols[theta6__z][x+1]},  
[_seat_profile_acc]) ] , x=0..steps-1) ] ):
display( 
plot(   [  seq(  [  i  ,  seat_profile_acc[i][1]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_acc)  )  ] ,color=cc[1],legend=typeset(x__dot2) ),
plot(   [  seq(  [  i  ,  seat_profile_acc[i][2]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_acc)  )  ] ,color=cc[2],legend=typeset(y__dot2) ), 
plot(   [  seq(  [  i  ,  seat_profile_acc[i][3]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_acc)  )  ] ,color=cc[3],legend=typeset(z__dot2) ), 
         labels = [typeset(t,&quot;[s]&quot;),typeset(vel,&quot;[m/s^2]&quot;)],
         title = &quot; Acceleration &quot;);</Text-field>
</Input>
</Group>
<Group labelreference="L62963" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" bold="true" layout="Normal"><Font bold="true">JERK</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L62915" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">_seat_profile_jerk_ground := diff(_seat_profile_acc_ground[1], t), diff(_seat_profile_acc_ground[2], t), diff(_seat_profile_acc_ground[3], t): # Projected to ground
_seat_profile_jerk := diff(_seat_profile_acc[1], t), diff(_seat_profile_acc[2], t), diff(_seat_profile_acc[3], t): # Projected to Seat</Text-field>
</Input>
</Group>
<Group labelreference="L65352" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">seat_profile_jerk := Vector( [ seq( [ subs( data,
{diff(diff(diff(theta1(t),t),t),t) = unapply(theta1__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(theta2(t),t),t),t) = unapply(theta2__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(theta3(t),t),t),t) = unapply(theta3__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(theta4(t),t),t),t) = unapply(theta4__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(theta5(t),t),t),t) = unapply(theta5__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(x2(t),t),t),t) = unapply(x2__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(z2(t),t),t),t) = unapply(z2__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(x3(t),t),t),t) = unapply(x3__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(z3(t),t),t),t) = unapply(z3__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(x4(t),t),t),t) = unapply(x4__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(z4(t),t),t),t) = unapply(z4__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(x5(t),t),t),t) = unapply(x5__dot3_spline,T)(x+0.000001)},  
{ddiff(iff(diff(z5(t),t),t),t) = unapply(z5__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(x6(t),t),t),t) = unapply(x6__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(y6(t),t),t),t) = unapply(y6__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(z6(t),t),t),t) = unapply(z6__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(theta4__5(t),t),t),t) = unapply(theta4__5__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(theta6__x(t),t),t),t) = unapply(theta6__x__dot3_spline,T)(x+0.000001)},  
{diff(diff(diff(theta6__y(t),t),t),t) = unapply(theta6__y__dot3_spline,T)(x+0.000001)}, 
{diff(diff(diff(theta6__z(t),t),t),t) = unapply(theta6__z__dot3_spline,T)(x+0.000001)},  
{diff(diff(theta1(t),t),t) = acc_sols[theta1__dot2][x+1]},  
{diff(diff(theta2(t),t),t) = acc_sols[theta2__dot2][x+1]},  
{diff(diff(theta3(t),t),t) = acc_sols[theta3__dot2][x+1]},  
{diff(diff(theta4(t),t),t) = acc_sols[theta4__dot2][x+1]},  
{diff(diff(theta5(t),t),t) = acc_sols[theta5__dot2][x+1]},  
{diff(diff(x2(t),t),t) = acc_sols[x2__dot2][x+1]},  
{diff(diff(z2(t),t),t) = acc_sols[z2__dot2][x+1]},  
{diff(diff(x3(t),t),t) = acc_sols[x3__dot2][x+1]},  
{diff(diff(z3(t),t),t) = acc_sols[z3__dot2][x+1]},  
{diff(diff(x4(t),t),t) = acc_sols[x4__dot2][x+1]},  
{diff(diff(z4(t),t),t) = acc_sols[z4__dot2][x+1]},  
{diff(diff(x5(t),t),t) = acc_sols[x5__dot2][x+1]},  
{diff(diff(z5(t),t),t) = acc_sols[z5__dot2][x+1]},  
{diff(diff(x6(t),t),t) = acc_sols[x6__dot2][x+1]},  
{diff(diff(y6(t),t),t) = acc_sols[y6__dot2][x+1]},  
{diff(diff(z6(t),t),t) = acc_sols[z6__dot2][x+1]},  
{diff(diff(theta4__5(t),t),t) = acc_sols[theta4__5__dot2][x+1]},  
{diff(diff(theta6__x(t),t),t) = acc_sols[theta6__x__dot2][x+1]},  
{diff(diff(theta6__y(t),t),t) = acc_sols[theta6__y__dot2][x+1]}, 
{diff(diff(theta6__z(t),t),t) = acc_sols[theta6__z__dot2][x+1]},  
{diff(theta1(t),t) = vel_sols[theta1__dot][x+1]},  
{diff(theta2(t),t) = vel_sols[theta2__dot][x+1]},  
{diff(theta3(t),t) = vel_sols[theta3__dot][x+1]},  
{diff(theta4(t),t) = vel_sols[theta4__dot][x+1]},  
{diff(theta5(t),t) = vel_sols[theta5__dot][x+1]},  
{diff(x2(t),t) = vel_sols[x2__dot][x+1]},  
{diff(z2(t),t) = vel_sols[z2__dot][x+1]},  
{diff(x3(t),t) = vel_sols[x3__dot][x+1]},  
{diff(z3(t),t) = vel_sols[z3__dot][x+1]},  
{diff(x4(t),t) = vel_sols[x4__dot][x+1]},  
{diff(z4(t),t) = vel_sols[z4__dot][x+1]},  
{diff(x5(t),t) = vel_sols[x5__dot][x+1]},  
{diff(z5(t),t) = vel_sols[z5__dot][x+1]},  
{diff(x6(t),t) = vel_sols[x6__dot][x+1]},  
{diff(y6(t),t) = vel_sols[y6__dot][x+1]},  
{diff(z6(t),t) = vel_sols[z6__dot][x+1]},  
{diff(theta4__5(t),t) = vel_sols[theta4__5__dot][x+1]},  
{diff(theta6__x(t),t) = vel_sols[theta6__x__dot][x+1]},  
{diff(theta6__y(t),t) = vel_sols[theta6__y__dot][x+1]}, 
{diff(theta6__z(t),t) = vel_sols[theta6__z__dot][x+1]},  
{theta1(t) = pos_sols[theta1][x+1]},  
{theta2(t) = pos_sols[theta2][x+1]},  
{theta3(t) = pos_sols[theta3][x+1]},  
{theta4(t) = pos_sols[theta4][x+1]},  
{theta5(t) = pos_sols[theta5][x+1]},  
{x2(t) = pos_sols[x2][x+1]},  
{z2(t) = pos_sols[z2][x+1]},  
{x3(t) = pos_sols[x3][x+1]},  
{z3(t) = pos_sols[z3][x+1]},  
{x4(t) = pos_sols[x4][x+1]},  
{z4(t) = pos_sols[z4][x+1]},  
{x5(t) = pos_sols[x5][x+1]},  
{z5(t) = pos_sols[z5][x+1]},  
{x6(t) = pos_sols[x6][x+1]},  
{y6(t) = pos_sols[y6][x+1]},  
{z6(t) = pos_sols[z6][x+1]},  
{theta4__5(t) = pos_sols[theta4__5][x+1]},  
{theta6__x(t) = pos_sols[theta6__x][x+1]},  
{theta6__y(t) = pos_sols[theta6__y][x+1]}, 
{theta6__z(t) = pos_sols[theta6__z][x+1]},  
[_seat_profile_jerk]) ] , x=0..steps-1) ] ):</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">display( 
plot(   [  seq(  [  i  ,  seat_profile_jerk[i][1]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_jerk)  )  ] ,color=cc[1],legend=typeset(x__dot3) ),
plot(   [  seq(  [  i  ,  seat_profile_jerk[i][2]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_jerk)  )  ] ,color=cc[2],legend=typeset(y__dot3) ), 
plot(   [  seq(  [  i  ,  seat_profile_jerk[i][3]/100 ]  ,  i=1..LinearAlgebra[Dimension](seat_profile_jerk)  )  ] ,color=cc[3],legend=typeset(z__dot3) ), 
         labels = [typeset(t,&quot;[s]&quot;),typeset(vel,&quot;[m/s^3]&quot;)],
         title = &quot; Jerk &quot;);</Text-field>
</Input>
</Group>
<Group labelreference="L65881" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group>
</Section>
</Section>
</Worksheet>